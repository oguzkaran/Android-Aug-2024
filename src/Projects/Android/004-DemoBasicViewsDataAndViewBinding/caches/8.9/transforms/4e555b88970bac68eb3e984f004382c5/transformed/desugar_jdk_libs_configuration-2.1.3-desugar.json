{"identifier":"com.tools.android:desugar_jdk_libs_configuration:2.1.3","required_compilation_api_level":30,"synthesized_library_classes_package_prefix":"j$/","support_all_callbacks_from_library":true,"shrinker_config":"-keepclassmembers class j$.** extends java.io.Serializable { void \u003cinit\u003e(); private static final java.io.ObjectStreamField[] serialPersistentFields; static final long serialVersionUID; java.lang.Object readResolve(); java.lang.Object writeReplace(); private void readObject(java.io.ObjectInputStream); private void writeObject(java.io.ObjectOutputStream); private void readObjectNoData(); }\n-keepclassmembers class j$.util.concurrent.ConcurrentHashMap$TreeBin { int lockState; }\n-keepclassmembers class j$.util.concurrent.ConcurrentHashMap { int sizeCtl; int transferIndex; long baseCount; int cellsBusy; }\n-keepclassmembers class j$.util.concurrent.ConcurrentHashMap$CounterCell { long value; }\n-keepclassmembers enum * { public static **[] values(); public static ** valueOf(java.lang.String); public static final !synthetic \u003cfields\u003e; }\n-keeppackagenames java.**\n-keeppackagenames j$.**\n-keepclassmembers class j$.util.IntSummaryStatistics { long count; long sum; int min; int max; }\n-keepclassmembers class j$.util.LongSummaryStatistics { long count; long sum; long min; long max; }\n-keepclassmembers class j$.util.DoubleSummaryStatistics { long count; double sum; double min; double max; }\n-keepattributes Signature\n-keepattributes EnclosingMethod\n-keepattributes InnerClasses\n-dontwarn sun.misc.Unsafe\n-dontwarn wrapper.**","configuration_format_version":200,"common_flags":[{"api_level_below_or_equal":36,"amend_library_method":["public a$Object[] b$Collection#toArray(c$IntFunction)"]},{"api_level_below_or_equal":36,"api_level_greater_or_equal":26,"rewrite_type":{"d$DesugarClock":"e$DesugarClock","d$DesugarClock$DesugarTickClock":"e$DesugarClock$DesugarTickClock","d$DesugarLocalDate":"e$DesugarLocalDate","d$DesugarOffsetTime":"e$DesugarOffsetTime"},"static_field_retarget":{"d$LocalDate d$LocalDate#EPOCH":"d$LocalDate d$DesugarLocalDate#EPOCH"},"static_retarget":{"d$Clock d$Clock#tickMillis(d$ZoneId)":"d$Clock d$DesugarClock#tickMillis(d$ZoneId)","d$LocalDate d$LocalDate#ofInstant(d$Instant, d$ZoneId)":"d$LocalDate d$DesugarLocalDate#ofInstant(d$Instant, d$ZoneId)"},"non_emulated_virtual_retarget":{"f$Stream d$LocalDate#datesUntil(d$LocalDate)":"f$Stream d$DesugarLocalDate#datesUntil(d$LocalDate, d$LocalDate)","f$Stream d$LocalDate#datesUntil(d$LocalDate, d$Period)":"f$Stream d$DesugarLocalDate#datesUntil(d$LocalDate, d$LocalDate, d$Period)","long d$LocalDate#toEpochSecond(d$LocalTime, d$ZoneOffset)":"long d$DesugarLocalDate#toEpochSecond(d$LocalDate, d$LocalTime, d$ZoneOffset)","long d$OffsetTime#toEpochSecond(d$LocalDate)":"long d$DesugarOffsetTime#toEpochSecond(d$OffsetTime, d$LocalDate)"},"amend_library_method":["public long d$OffsetTime#toEpochSecond(d$LocalDate)","public long d$LocalDate#toEpochSecond(d$LocalTime, d$ZoneOffset)","public static d$LocalDate d$LocalDate#ofInstant(d$Instant, d$ZoneId)","public f$Stream d$LocalDate#datesUntil(d$LocalDate, d$Period)","public f$Stream d$LocalDate#datesUntil(d$LocalDate)","public static d$Clock d$Clock#tickMillis(d$ZoneId)"],"amend_library_field":["public static d$LocalDate d$LocalDate#EPOCH"]},{"api_level_below_or_equal":36,"api_level_greater_or_equal":24,"rewrite_type":{"f$DesugarDoubleStream":"g$DesugarDoubleStream","f$DesugarDoubleStream$1":"g$DesugarDoubleStream$1","f$DesugarIntStream":"g$DesugarIntStream","f$DesugarIntStream$1":"g$DesugarIntStream$1","f$DesugarLongStream":"g$DesugarLongStream","f$DesugarLongStream$1":"g$DesugarLongStream$1","f$DesugarStream":"g$DesugarStream","f$DesugarStream$1":"g$DesugarStream$1"},"static_retarget":{"f$DoubleStream f$DoubleStream#iterate(double, c$DoublePredicate, c$DoubleUnaryOperator)":"f$DoubleStream f$DesugarDoubleStream#iterate(double, c$DoublePredicate, c$DoubleUnaryOperator)","f$IntStream f$IntStream#iterate(int, c$IntPredicate, c$IntUnaryOperator)":"f$IntStream f$DesugarIntStream#iterate(int, c$IntPredicate, c$IntUnaryOperator)","f$LongStream f$LongStream#iterate(long, c$LongPredicate, c$LongUnaryOperator)":"f$LongStream f$DesugarLongStream#iterate(long, c$LongPredicate, c$LongUnaryOperator)","f$Stream f$Stream#iterate(a$Object, c$Predicate, c$UnaryOperator)":"f$Stream f$DesugarStream#iterate(a$Object, c$Predicate, c$UnaryOperator)"}},{"api_level_below_or_equal":32,"rewrite_type":{"h$DesugarTimeUnit":"i$DesugarTimeUnit","h$DesugarTimeUnit$1":"i$DesugarTimeUnit$1"},"static_retarget":{"h$TimeUnit h$TimeUnit#of(j$ChronoUnit)":"h$TimeUnit h$DesugarTimeUnit#of(j$ChronoUnit)"},"non_emulated_virtual_retarget":{"j$ChronoUnit h$TimeUnit#toChronoUnit()":"j$ChronoUnit h$DesugarTimeUnit#toChronoUnit(h$TimeUnit)","long h$TimeUnit#convert(d$Duration)":"long h$DesugarTimeUnit#convert(h$TimeUnit, d$Duration)"},"amend_library_method":["public j$ChronoUnit h$TimeUnit#toChronoUnit()","public long h$TimeUnit#convert(d$Duration)","public static h$TimeUnit h$TimeUnit#of(j$ChronoUnit)"]},{"api_level_below_or_equal":32,"api_level_greater_or_equal":24,"rewrite_type":{"f$DesugarCollectors":"g$DesugarCollectors","f$DesugarCollectors$CollectorImpl":"g$DesugarCollectors$CollectorImpl"},"rewrite_derived_type_only":{"b$Collection":"k$Collection"},"static_retarget":{"f$Collector f$Collectors#filtering(c$Predicate, f$Collector)":"f$Collector f$DesugarCollectors#filtering(c$Predicate, f$Collector)","f$Collector f$Collectors#flatMapping(c$Function, f$Collector)":"f$Collector f$DesugarCollectors#flatMapping(c$Function, f$Collector)","f$Collector f$Collectors#toUnmodifiableList()":"f$Collector f$DesugarCollectors#toUnmodifiableList()","f$Collector f$Collectors#toUnmodifiableMap(c$Function, c$Function)":"f$Collector f$DesugarCollectors#toUnmodifiableMap(c$Function, c$Function)","f$Collector f$Collectors#toUnmodifiableMap(c$Function, c$Function, c$BinaryOperator)":"f$Collector f$DesugarCollectors#toUnmodifiableMap(c$Function, c$Function, c$BinaryOperator)","f$Collector f$Collectors#toUnmodifiableSet()":"f$Collector f$DesugarCollectors#toUnmodifiableSet()"},"emulated_interface":{"b$Collection":["k$Collection",{"a$Object[] b$Collection#toArray(c$IntFunction)":[["a$Object[] k$Collection#toArray(c$IntFunction)","-1"],["a$Object[] b$Collection#toArray(c$IntFunction)","9"],["a$Object[] b$Collection#toArray(c$IntFunction)","8"],{}]}]},"amend_library_method":["public static f$Collector f$Collectors#toUnmodifiableMap(c$Function, c$Function, c$BinaryOperator)","public static f$Collector f$Collectors#toUnmodifiableSet()","public static f$Collector f$Collectors#toUnmodifiableList()","public static f$Collector f$Collectors#toUnmodifiableMap(c$Function, c$Function)","public static f$Collector f$Collectors#flatMapping(c$Function, f$Collector)","public static f$Collector f$Collectors#filtering(c$Predicate, f$Collector)"]},{"api_level_below_or_equal":30,"api_level_greater_or_equal":26,"rewrite_type":{"d$DesugarDuration":"e$DesugarDuration","d$DesugarLocalTime":"e$DesugarLocalTime"},"static_retarget":{"d$LocalTime d$LocalTime#ofInstant(d$Instant, d$ZoneId)":"d$LocalTime d$DesugarLocalTime#ofInstant(d$Instant, d$ZoneId)"},"non_emulated_virtual_retarget":{"d$Duration d$Duration#truncatedTo(j$TemporalUnit)":"d$Duration d$DesugarDuration#truncatedTo(d$Duration, j$TemporalUnit)","int d$Duration#toHoursPart()":"int d$DesugarDuration#toHoursPart(d$Duration)","int d$Duration#toMillisPart()":"int d$DesugarDuration#toMillisPart(d$Duration)","int d$Duration#toMinutesPart()":"int d$DesugarDuration#toMinutesPart(d$Duration)","int d$Duration#toNanosPart()":"int d$DesugarDuration#toNanosPart(d$Duration)","int d$Duration#toSecondsPart()":"int d$DesugarDuration#toSecondsPart(d$Duration)","long d$Duration#dividedBy(d$Duration)":"long d$DesugarDuration#dividedBy(d$Duration, d$Duration)","long d$Duration#toDaysPart()":"long d$DesugarDuration#toDaysPart(d$Duration)","long d$Duration#toSeconds()":"long d$DesugarDuration#toSeconds(d$Duration)","long d$LocalTime#toEpochSecond(d$LocalDate, d$ZoneOffset)":"long d$DesugarLocalTime#toEpochSecond(d$LocalTime, d$LocalDate, d$ZoneOffset)"},"amend_library_method":["public long d$Duration#toSeconds()","public static d$LocalTime d$LocalTime#ofInstant(d$Instant, d$ZoneId)","public int d$Duration#toHoursPart()","public long d$Duration#toDaysPart()","public long d$LocalTime#toEpochSecond(d$LocalDate, d$ZoneOffset)","public int d$Duration#toNanosPart()","public int d$Duration#toMillisPart()","public int d$Duration#toMinutesPart()","public long d$Duration#dividedBy(d$Duration)","public d$Duration d$Duration#truncatedTo(j$TemporalUnit)","public int d$Duration#toSecondsPart()"]},{"api_level_below_or_equal":29,"rewrite_type":{"h$Flow":"i$Flow","h$Flow$Processor":"i$Flow$Processor","h$Flow$Publisher":"i$Flow$Publisher","h$Flow$Subscriber":"i$Flow$Subscriber","h$Flow$Subscription":"i$Flow$Subscription"},"wrapper":{"h$Flow$Publisher":[["void h$Flow$Publisher#subscribe(h$Flow$Subscriber)"],false,[]],"h$Flow$Subscriber":[["void h$Flow$Subscriber#onComplete()","void h$Flow$Subscriber#onError(a$Throwable)","void h$Flow$Subscriber#onNext(a$Object)","void h$Flow$Subscriber#onSubscribe(h$Flow$Subscription)"],false,[]],"h$Flow$Subscription":[["void h$Flow$Subscription#cancel()","void h$Flow$Subscription#request(long)"],false,[]]}},{"api_level_below_or_equal":25,"rewrite_type":{"b$Base64":"k$Base64","b$Base64$DecInputStream":"k$Base64$DecInputStream","b$Base64$Decoder":"k$Base64$Decoder","b$Base64$EncOutputStream":"k$Base64$EncOutputStream","b$Base64$Encoder":"k$Base64$Encoder","b$DesugarArrays":"k$DesugarArrays","b$DesugarCalendar":"k$DesugarCalendar","b$DesugarCollections":"k$DesugarCollections","b$DesugarCollections$CheckedCollection":"k$DesugarCollections$CheckedCollection","b$DesugarCollections$CheckedCollection$1":"k$DesugarCollections$CheckedCollection$1","b$DesugarCollections$CheckedList":"k$DesugarCollections$CheckedList","b$DesugarCollections$CheckedList$1":"k$DesugarCollections$CheckedList$1","b$DesugarCollections$CheckedMap":"k$DesugarCollections$CheckedMap","b$DesugarCollections$CheckedMap$CheckedEntrySet":"k$DesugarCollections$CheckedMap$CheckedEntrySet","b$DesugarCollections$CheckedMap$CheckedEntrySet$1":"k$DesugarCollections$CheckedMap$CheckedEntrySet$1","b$DesugarCollections$CheckedMap$CheckedEntrySet$CheckedEntry":"k$DesugarCollections$CheckedMap$CheckedEntrySet$CheckedEntry","b$DesugarCollections$CheckedRandomAccessList":"k$DesugarCollections$CheckedRandomAccessList","b$DesugarCollections$CheckedSet":"k$DesugarCollections$CheckedSet","b$DesugarCollections$CheckedSortedMap":"k$DesugarCollections$CheckedSortedMap","b$DesugarCollections$CheckedSortedSet":"k$DesugarCollections$CheckedSortedSet","b$DesugarCollections$SynchronizedCollection":"k$DesugarCollections$SynchronizedCollection","b$DesugarCollections$SynchronizedList":"k$DesugarCollections$SynchronizedList","b$DesugarCollections$SynchronizedMap":"k$DesugarCollections$SynchronizedMap","b$DesugarCollections$SynchronizedRandomAccessList":"k$DesugarCollections$SynchronizedRandomAccessList","b$DesugarCollections$SynchronizedSet":"k$DesugarCollections$SynchronizedSet","b$DesugarCollections$SynchronizedSortedMap":"k$DesugarCollections$SynchronizedSortedMap","b$DesugarCollections$SynchronizedSortedSet":"k$DesugarCollections$SynchronizedSortedSet","b$DesugarCollections$UnmodifiableCollection":"k$DesugarCollections$UnmodifiableCollection","b$DesugarCollections$UnmodifiableCollection$1":"k$DesugarCollections$UnmodifiableCollection$1","b$DesugarCollections$UnmodifiableList":"k$DesugarCollections$UnmodifiableList","b$DesugarCollections$UnmodifiableList$1":"k$DesugarCollections$UnmodifiableList$1","b$DesugarCollections$UnmodifiableMap":"k$DesugarCollections$UnmodifiableMap","b$DesugarCollections$UnmodifiableMap$UnmodifiableEntrySet":"k$DesugarCollections$UnmodifiableMap$UnmodifiableEntrySet","b$DesugarCollections$UnmodifiableMap$UnmodifiableEntrySet$1":"k$DesugarCollections$UnmodifiableMap$UnmodifiableEntrySet$1","b$DesugarCollections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry":"k$DesugarCollections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry","b$DesugarCollections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntrySetSpliterator":"k$DesugarCollections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntrySetSpliterator","b$DesugarCollections$UnmodifiableRandomAccessList":"k$DesugarCollections$UnmodifiableRandomAccessList","b$DesugarCollections$UnmodifiableSet":"k$DesugarCollections$UnmodifiableSet","b$DesugarCollections$UnmodifiableSortedMap":"k$DesugarCollections$UnmodifiableSortedMap","b$DesugarCollections$UnmodifiableSortedSet":"k$DesugarCollections$UnmodifiableSortedSet","b$DesugarDate":"k$DesugarDate","b$DesugarGregorianCalendar":"k$DesugarGregorianCalendar","b$DesugarLinkedHashSet":"k$DesugarLinkedHashSet","b$DesugarTimeZone":"k$DesugarTimeZone","d$Clock":"e$Clock","d$Clock$FixedClock":"e$Clock$FixedClock","d$Clock$OffsetClock":"e$Clock$OffsetClock","d$Clock$SystemClock":"e$Clock$SystemClock","d$Clock$TickClock":"e$Clock$TickClock","d$DateTimeException":"e$DateTimeException","d$DayOfWeek":"e$DayOfWeek","d$DesugarClock":"e$DesugarClock","d$DesugarClock$DesugarTickClock":"e$DesugarClock$DesugarTickClock","d$DesugarDuration":"e$DesugarDuration","d$DesugarLocalDate":"e$DesugarLocalDate","d$DesugarLocalTime":"e$DesugarLocalTime","d$DesugarOffsetTime":"e$DesugarOffsetTime","d$Duration":"e$Duration","d$Duration$1":"e$Duration$1","d$Duration$DurationUnits":"e$Duration$DurationUnits","d$Duration$Lazy":"e$Duration$Lazy","d$Instant":"e$Instant","d$Instant$1":"e$Instant$1","d$LocalDate":"e$LocalDate","d$LocalDate$1":"e$LocalDate$1","d$LocalDateTime":"e$LocalDateTime","d$LocalDateTime$1":"e$LocalDateTime$1","d$LocalTime":"e$LocalTime","d$LocalTime$1":"e$LocalTime$1","d$Month":"e$Month","d$Month$1":"e$Month$1","d$MonthDay":"e$MonthDay","d$MonthDay$1":"e$MonthDay$1","d$OffsetDateTime":"e$OffsetDateTime","d$OffsetDateTime$1":"e$OffsetDateTime$1","d$OffsetTime":"e$OffsetTime","d$OffsetTime$1":"e$OffsetTime$1","d$Period":"e$Period","d$Ser":"e$Ser","d$TimeConversions":"e$TimeConversions","d$Year":"e$Year","d$Year$1":"e$Year$1","d$YearMonth":"e$YearMonth","d$YearMonth$1":"e$YearMonth$1","d$ZoneId":"e$ZoneId","d$ZoneId$1":"e$ZoneId$1","d$ZoneOffset":"e$ZoneOffset","d$ZoneRegion":"e$ZoneRegion","d$ZonedDateTime":"e$ZonedDateTime","d$ZonedDateTime$1":"e$ZonedDateTime$1","j$ChronoField":"l$ChronoField","j$ChronoUnit":"l$ChronoUnit","j$IsoFields":"l$IsoFields","j$IsoFields$1":"l$IsoFields$1","j$IsoFields$Field":"l$IsoFields$Field","j$IsoFields$Field$1":"l$IsoFields$Field$1","j$IsoFields$Field$2":"l$IsoFields$Field$2","j$IsoFields$Field$3":"l$IsoFields$Field$3","j$IsoFields$Field$4":"l$IsoFields$Field$4","j$IsoFields$Unit":"l$IsoFields$Unit","j$JulianFields":"l$JulianFields","j$JulianFields$Field":"l$JulianFields$Field","j$Temporal":"l$Temporal","j$TemporalAccessor":"l$TemporalAccessor","j$TemporalAdjuster":"l$TemporalAdjuster","j$TemporalAdjusters":"l$TemporalAdjusters","j$TemporalAmount":"l$TemporalAmount","j$TemporalField":"l$TemporalField","j$TemporalQueries":"l$TemporalQueries","j$TemporalQueries$1":"l$TemporalQueries$1","j$TemporalQueries$2":"l$TemporalQueries$2","j$TemporalQueries$3":"l$TemporalQueries$3","j$TemporalQueries$4":"l$TemporalQueries$4","j$TemporalQueries$5":"l$TemporalQueries$5","j$TemporalQueries$6":"l$TemporalQueries$6","j$TemporalQueries$7":"l$TemporalQueries$7","j$TemporalQuery":"l$TemporalQuery","j$TemporalUnit":"l$TemporalUnit","j$UnsupportedTemporalTypeException":"l$UnsupportedTemporalTypeException","j$ValueRange":"l$ValueRange","j$WeekFields":"l$WeekFields","j$WeekFields$ComputedDayOfField":"l$WeekFields$ComputedDayOfField","m$DateTimeFormatter":"n$DateTimeFormatter","m$DateTimeFormatter$ClassicFormat":"n$DateTimeFormatter$ClassicFormat","m$DateTimeFormatterBuilder":"n$DateTimeFormatterBuilder","m$DateTimeFormatterBuilder$1":"n$DateTimeFormatterBuilder$1","m$DateTimeFormatterBuilder$2":"n$DateTimeFormatterBuilder$2","m$DateTimeFormatterBuilder$3":"n$DateTimeFormatterBuilder$3","m$DateTimeFormatterBuilder$CharLiteralPrinterParser":"n$DateTimeFormatterBuilder$CharLiteralPrinterParser","m$DateTimeFormatterBuilder$ChronoPrinterParser":"n$DateTimeFormatterBuilder$ChronoPrinterParser","m$DateTimeFormatterBuilder$CompositePrinterParser":"n$DateTimeFormatterBuilder$CompositePrinterParser","m$DateTimeFormatterBuilder$DateTimePrinterParser":"n$DateTimeFormatterBuilder$DateTimePrinterParser","m$DateTimeFormatterBuilder$DefaultValueParser":"n$DateTimeFormatterBuilder$DefaultValueParser","m$DateTimeFormatterBuilder$FractionPrinterParser":"n$DateTimeFormatterBuilder$FractionPrinterParser","m$DateTimeFormatterBuilder$InstantPrinterParser":"n$DateTimeFormatterBuilder$InstantPrinterParser","m$DateTimeFormatterBuilder$LocalizedOffsetIdPrinterParser":"n$DateTimeFormatterBuilder$LocalizedOffsetIdPrinterParser","m$DateTimeFormatterBuilder$LocalizedPrinterParser":"n$DateTimeFormatterBuilder$LocalizedPrinterParser","m$DateTimeFormatterBuilder$NumberPrinterParser":"n$DateTimeFormatterBuilder$NumberPrinterParser","m$DateTimeFormatterBuilder$OffsetIdPrinterParser":"n$DateTimeFormatterBuilder$OffsetIdPrinterParser","m$DateTimeFormatterBuilder$PadPrinterParserDecorator":"n$DateTimeFormatterBuilder$PadPrinterParserDecorator","m$DateTimeFormatterBuilder$PrefixTree":"n$DateTimeFormatterBuilder$PrefixTree","m$DateTimeFormatterBuilder$PrefixTree$CI":"n$DateTimeFormatterBuilder$PrefixTree$CI","m$DateTimeFormatterBuilder$PrefixTree$LENIENT":"n$DateTimeFormatterBuilder$PrefixTree$LENIENT","m$DateTimeFormatterBuilder$ReducedPrinterParser":"n$DateTimeFormatterBuilder$ReducedPrinterParser","m$DateTimeFormatterBuilder$SettingsParser":"n$DateTimeFormatterBuilder$SettingsParser","m$DateTimeFormatterBuilder$StringLiteralPrinterParser":"n$DateTimeFormatterBuilder$StringLiteralPrinterParser","m$DateTimeFormatterBuilder$TextPrinterParser":"n$DateTimeFormatterBuilder$TextPrinterParser","m$DateTimeFormatterBuilder$WeekBasedFieldPrinterParser":"n$DateTimeFormatterBuilder$WeekBasedFieldPrinterParser","m$DateTimeFormatterBuilder$ZoneIdPrinterParser":"n$DateTimeFormatterBuilder$ZoneIdPrinterParser","m$DateTimeFormatterBuilder$ZoneTextPrinterParser":"n$DateTimeFormatterBuilder$ZoneTextPrinterParser","m$DateTimeFormatterBuilderHelper":"n$DateTimeFormatterBuilderHelper","m$DateTimeParseContext":"n$DateTimeParseContext","m$DateTimeParseException":"n$DateTimeParseException","m$DateTimePrintContext":"n$DateTimePrintContext","m$DateTimePrintContext$1":"n$DateTimePrintContext$1","m$DateTimeTextProvider":"n$DateTimeTextProvider","m$DateTimeTextProvider$1":"n$DateTimeTextProvider$1","m$DateTimeTextProvider$LocaleStore":"n$DateTimeTextProvider$LocaleStore","m$DecimalStyle":"n$DecimalStyle","m$DesugarDateTimeTextProviderHelper":"n$DesugarDateTimeTextProviderHelper","m$FormatStyle":"n$FormatStyle","m$Parsed":"n$Parsed","m$ResolverStyle":"n$ResolverStyle","m$SignStyle":"n$SignStyle","m$TextStyle":"n$TextStyle","m$ZoneName":"n$ZoneName","o$Ser":"p$Ser","o$TzdbZoneRulesProvider":"p$TzdbZoneRulesProvider","o$ZoneOffsetTransition":"p$ZoneOffsetTransition","o$ZoneOffsetTransitionRule":"p$ZoneOffsetTransitionRule","o$ZoneOffsetTransitionRule$1":"p$ZoneOffsetTransitionRule$1","o$ZoneOffsetTransitionRule$TimeDefinition":"p$ZoneOffsetTransitionRule$TimeDefinition","o$ZoneRules":"p$ZoneRules","o$ZoneRulesException":"p$ZoneRulesException","o$ZoneRulesProvider":"p$ZoneRulesProvider","o$ZoneRulesProvider$1":"p$ZoneRulesProvider$1","o$ZoneRulesProvider$TimeZoneRulesProvider":"p$ZoneRulesProvider$TimeZoneRulesProvider","q$AbstractChronology":"r$AbstractChronology","q$ChronoLocalDate":"r$ChronoLocalDate","q$ChronoLocalDateImpl":"r$ChronoLocalDateImpl","q$ChronoLocalDateImpl$1":"r$ChronoLocalDateImpl$1","q$ChronoLocalDateTime":"r$ChronoLocalDateTime","q$ChronoLocalDateTimeImpl":"r$ChronoLocalDateTimeImpl","q$ChronoLocalDateTimeImpl$1":"r$ChronoLocalDateTimeImpl$1","q$ChronoPeriod":"r$ChronoPeriod","q$ChronoPeriodImpl":"r$ChronoPeriodImpl","q$ChronoZonedDateTime":"r$ChronoZonedDateTime","q$ChronoZonedDateTime$1":"r$ChronoZonedDateTime$1","q$ChronoZonedDateTimeImpl":"r$ChronoZonedDateTimeImpl","q$ChronoZonedDateTimeImpl$1":"r$ChronoZonedDateTimeImpl$1","q$Chronology":"r$Chronology","q$Chronology$1":"r$Chronology$1","q$DesugarIsoChronology":"r$DesugarIsoChronology","q$Era":"r$Era","q$HijrahChronology":"r$HijrahChronology","q$HijrahChronology$1":"r$HijrahChronology$1","q$HijrahDate":"r$HijrahDate","q$HijrahDate$1":"r$HijrahDate$1","q$HijrahEra":"r$HijrahEra","q$IsoChronology":"r$IsoChronology","q$IsoEra":"r$IsoEra","q$JapaneseChronology":"r$JapaneseChronology","q$JapaneseChronology$1":"r$JapaneseChronology$1","q$JapaneseDate":"r$JapaneseDate","q$JapaneseDate$1":"r$JapaneseDate$1","q$JapaneseEra":"r$JapaneseEra","q$MinguoChronology":"r$MinguoChronology","q$MinguoChronology$1":"r$MinguoChronology$1","q$MinguoDate":"r$MinguoDate","q$MinguoDate$1":"r$MinguoDate$1","q$MinguoEra":"r$MinguoEra","q$Ser":"r$Ser","q$ThaiBuddhistChronology":"r$ThaiBuddhistChronology","q$ThaiBuddhistChronology$1":"r$ThaiBuddhistChronology$1","q$ThaiBuddhistDate":"r$ThaiBuddhistDate","q$ThaiBuddhistDate$1":"r$ThaiBuddhistDate$1","q$ThaiBuddhistEra":"r$ThaiBuddhistEra"},"rewrite_derived_type_only":{"b$Date":"k$Date","b$GregorianCalendar":"k$GregorianCalendar","b$TimeZone":"k$TimeZone"},"static_retarget":{"b$TimeZone b$TimeZone#getTimeZone(d$ZoneId)":"b$TimeZone b$DesugarTimeZone#getTimeZone(d$ZoneId)"},"emulated_virtual_retarget":{"d$Instant b$Date#toInstant()":[["d$Instant b$Date#toInstant()","11"],["d$Instant b$Date#toInstant()","10"],["d$Instant b$DesugarDate#toInstant(b$Date)","-1"],{}],"d$ZoneId b$TimeZone#toZoneId()":[["d$ZoneId b$TimeZone#toZoneId()","11"],["d$ZoneId b$TimeZone#toZoneId()","10"],["d$ZoneId b$DesugarTimeZone#toZoneId(b$TimeZone)","-1"],{}],"d$ZonedDateTime b$GregorianCalendar#toZonedDateTime()":[["d$ZonedDateTime b$GregorianCalendar#toZonedDateTime()","11"],["d$ZonedDateTime b$GregorianCalendar#toZonedDateTime()","10"],["d$ZonedDateTime b$DesugarGregorianCalendar#toZonedDateTime(b$GregorianCalendar)","-1"],{}]},"wrapper":{"d$Clock":[["d$Clock d$Clock#withZone(d$ZoneId)","d$Instant d$Clock#instant()","d$ZoneId d$Clock#getZone()","long d$Clock#millis()"],false,[]]},"custom_conversion":{"d$Duration":["d$Duration d$TimeConversions#convert(e$Duration)","e$Duration d$TimeConversions#convert(d$Duration)"],"d$Instant":["d$Instant d$TimeConversions#convert(e$Instant)","e$Instant d$TimeConversions#convert(d$Instant)"],"d$LocalDate":["d$LocalDate d$TimeConversions#convert(e$LocalDate)","e$LocalDate d$TimeConversions#convert(d$LocalDate)"],"d$LocalDateTime":["d$LocalDateTime d$TimeConversions#convert(e$LocalDateTime)","e$LocalDateTime d$TimeConversions#convert(d$LocalDateTime)"],"d$LocalTime":["d$LocalTime d$TimeConversions#convert(e$LocalTime)","e$LocalTime d$TimeConversions#convert(d$LocalTime)"],"d$MonthDay":["d$MonthDay d$TimeConversions#convert(e$MonthDay)","e$MonthDay d$TimeConversions#convert(d$MonthDay)"],"d$Period":["d$Period d$TimeConversions#convert(e$Period)","e$Period d$TimeConversions#convert(d$Period)"],"d$ZoneId":["d$ZoneId d$TimeConversions#convert(e$ZoneId)","e$ZoneId d$TimeConversions#convert(d$ZoneId)"],"d$ZoneOffset":["d$ZoneOffset d$TimeConversions#convert(e$ZoneOffset)","e$ZoneOffset d$TimeConversions#convert(d$ZoneOffset)"],"d$ZonedDateTime":["d$ZonedDateTime d$TimeConversions#convert(e$ZonedDateTime)","e$ZonedDateTime d$TimeConversions#convert(d$ZonedDateTime)"]}},{"api_level_below_or_equal":23,"rewrite_type":{"b$DoubleSummaryStatistics":"k$DoubleSummaryStatistics","b$DoubleSummaryStatisticsConversions":"k$DoubleSummaryStatisticsConversions","b$IntSummaryStatistics":"k$IntSummaryStatistics","b$IntSummaryStatisticsConversions":"k$IntSummaryStatisticsConversions","b$LongSummaryStatistics":"k$LongSummaryStatistics","b$LongSummaryStatisticsConversions":"k$LongSummaryStatisticsConversions","b$Objects":"k$Objects","b$Optional":"k$Optional","b$OptionalConversions":"k$OptionalConversions","b$OptionalDouble":"k$OptionalDouble","b$OptionalInt":"k$OptionalInt","b$OptionalLong":"k$OptionalLong","b$PrimitiveIterator":"k$PrimitiveIterator","b$PrimitiveIterator$OfDouble":"k$PrimitiveIterator$OfDouble","b$PrimitiveIterator$OfInt":"k$PrimitiveIterator$OfInt","b$PrimitiveIterator$OfLong":"k$PrimitiveIterator$OfLong","b$Spliterator":"k$Spliterator","b$Spliterator$OfDouble":"k$Spliterator$OfDouble","b$Spliterator$OfInt":"k$Spliterator$OfInt","b$Spliterator$OfLong":"k$Spliterator$OfLong","b$Spliterator$OfPrimitive":"k$Spliterator$OfPrimitive","b$Spliterators":"k$Spliterators","b$Spliterators$1Adapter":"k$Spliterators$1Adapter","b$Spliterators$2Adapter":"k$Spliterators$2Adapter","b$Spliterators$3Adapter":"k$Spliterators$3Adapter","b$Spliterators$4Adapter":"k$Spliterators$4Adapter","b$Spliterators$AbstractDoubleSpliterator":"k$Spliterators$AbstractDoubleSpliterator","b$Spliterators$AbstractDoubleSpliterator$HoldingDoubleConsumer":"k$Spliterators$AbstractDoubleSpliterator$HoldingDoubleConsumer","b$Spliterators$AbstractIntSpliterator":"k$Spliterators$AbstractIntSpliterator","b$Spliterators$AbstractIntSpliterator$HoldingIntConsumer":"k$Spliterators$AbstractIntSpliterator$HoldingIntConsumer","b$Spliterators$AbstractLongSpliterator":"k$Spliterators$AbstractLongSpliterator","b$Spliterators$AbstractLongSpliterator$HoldingLongConsumer":"k$Spliterators$AbstractLongSpliterator$HoldingLongConsumer","b$Spliterators$AbstractSpliterator":"k$Spliterators$AbstractSpliterator","b$Spliterators$AbstractSpliterator$HoldingConsumer":"k$Spliterators$AbstractSpliterator$HoldingConsumer","b$Spliterators$ArraySpliterator":"k$Spliterators$ArraySpliterator","b$Spliterators$DoubleArraySpliterator":"k$Spliterators$DoubleArraySpliterator","b$Spliterators$DoubleIteratorSpliterator":"k$Spliterators$DoubleIteratorSpliterator","b$Spliterators$EmptySpliterator":"k$Spliterators$EmptySpliterator","b$Spliterators$EmptySpliterator$OfDouble":"k$Spliterators$EmptySpliterator$OfDouble","b$Spliterators$EmptySpliterator$OfInt":"k$Spliterators$EmptySpliterator$OfInt","b$Spliterators$EmptySpliterator$OfLong":"k$Spliterators$EmptySpliterator$OfLong","b$Spliterators$EmptySpliterator$OfRef":"k$Spliterators$EmptySpliterator$OfRef","b$Spliterators$IntArraySpliterator":"k$Spliterators$IntArraySpliterator","b$Spliterators$IntIteratorSpliterator":"k$Spliterators$IntIteratorSpliterator","b$Spliterators$IteratorSpliterator":"k$Spliterators$IteratorSpliterator","b$Spliterators$LongArraySpliterator":"k$Spliterators$LongArraySpliterator","b$Spliterators$LongIteratorSpliterator":"k$Spliterators$LongIteratorSpliterator","b$StringJoiner":"k$StringJoiner","f$AbstractPipeline":"g$AbstractPipeline","f$AbstractShortCircuitTask":"g$AbstractShortCircuitTask","f$AbstractSpinedBuffer":"g$AbstractSpinedBuffer","f$AbstractTask":"g$AbstractTask","f$BaseStream":"g$BaseStream","f$Collector":"g$Collector","f$Collector$Characteristics":"g$Collector$Characteristics","f$Collectors":"g$Collectors","f$Collectors$1OptionalBox":"g$Collectors$1OptionalBox","f$Collectors$CollectorImpl":"g$Collectors$CollectorImpl","f$Collectors$Partition":"g$Collectors$Partition","f$Collectors$Partition$1":"g$Collectors$Partition$1","f$DesugarCollectors":"g$DesugarCollectors","f$DesugarCollectors$CollectorImpl":"g$DesugarCollectors$CollectorImpl","f$DesugarDoubleStream":"g$DesugarDoubleStream","f$DesugarDoubleStream$1":"g$DesugarDoubleStream$1","f$DesugarIntStream":"g$DesugarIntStream","f$DesugarIntStream$1":"g$DesugarIntStream$1","f$DesugarLongStream":"g$DesugarLongStream","f$DesugarLongStream$1":"g$DesugarLongStream$1","f$DesugarStream":"g$DesugarStream","f$DesugarStream$1":"g$DesugarStream$1","f$DistinctOps":"g$DistinctOps","f$DistinctOps$1":"g$DistinctOps$1","f$DistinctOps$1$1":"g$DistinctOps$1$1","f$DistinctOps$1$2":"g$DistinctOps$1$2","f$DoublePipeline":"g$DoublePipeline","f$DoublePipeline$1":"g$DoublePipeline$1","f$DoublePipeline$1$1":"g$DoublePipeline$1$1","f$DoublePipeline$2":"g$DoublePipeline$2","f$DoublePipeline$2$1":"g$DoublePipeline$2$1","f$DoublePipeline$3":"g$DoublePipeline$3","f$DoublePipeline$3$1":"g$DoublePipeline$3$1","f$DoublePipeline$4":"g$DoublePipeline$4","f$DoublePipeline$4$1":"g$DoublePipeline$4$1","f$DoublePipeline$5":"g$DoublePipeline$5","f$DoublePipeline$5$1":"g$DoublePipeline$5$1","f$DoublePipeline$6":"g$DoublePipeline$6","f$DoublePipeline$7":"g$DoublePipeline$7","f$DoublePipeline$7$1":"g$DoublePipeline$7$1","f$DoublePipeline$8":"g$DoublePipeline$8","f$DoublePipeline$8$1":"g$DoublePipeline$8$1","f$DoublePipeline$Head":"g$DoublePipeline$Head","f$DoublePipeline$StatefulOp":"g$DoublePipeline$StatefulOp","f$DoublePipeline$StatelessOp":"g$DoublePipeline$StatelessOp","f$DoubleStream":"g$DoubleStream","f$DoubleStream$1":"g$DoubleStream$1","f$DoubleStream$2":"g$DoubleStream$2","f$DoubleStream$Builder":"g$DoubleStream$Builder","f$FindOps":"g$FindOps","f$FindOps$FindOp":"g$FindOps$FindOp","f$FindOps$FindSink":"g$FindOps$FindSink","f$FindOps$FindSink$OfDouble":"g$FindOps$FindSink$OfDouble","f$FindOps$FindSink$OfInt":"g$FindOps$FindSink$OfInt","f$FindOps$FindSink$OfLong":"g$FindOps$FindSink$OfLong","f$FindOps$FindSink$OfRef":"g$FindOps$FindSink$OfRef","f$FindOps$FindTask":"g$FindOps$FindTask","f$FlatMapApiFlips":"g$FlatMapApiFlips","f$FlatMapApiFlips$DoubleFunctionStreamWrapper":"g$FlatMapApiFlips$DoubleFunctionStreamWrapper","f$FlatMapApiFlips$FunctionStreamWrapper":"g$FlatMapApiFlips$FunctionStreamWrapper","f$FlatMapApiFlips$IntFunctionStreamWrapper":"g$FlatMapApiFlips$IntFunctionStreamWrapper","f$FlatMapApiFlips$LongFunctionStreamWrapper":"g$FlatMapApiFlips$LongFunctionStreamWrapper","f$ForEachOps":"g$ForEachOps","f$ForEachOps$ForEachOp":"g$ForEachOps$ForEachOp","f$ForEachOps$ForEachOp$OfDouble":"g$ForEachOps$ForEachOp$OfDouble","f$ForEachOps$ForEachOp$OfInt":"g$ForEachOps$ForEachOp$OfInt","f$ForEachOps$ForEachOp$OfLong":"g$ForEachOps$ForEachOp$OfLong","f$ForEachOps$ForEachOp$OfRef":"g$ForEachOps$ForEachOp$OfRef","f$ForEachOps$ForEachOrderedTask":"g$ForEachOps$ForEachOrderedTask","f$ForEachOps$ForEachTask":"g$ForEachOps$ForEachTask","f$IntPipeline":"g$IntPipeline","f$IntPipeline$1":"g$IntPipeline$1","f$IntPipeline$1$1":"g$IntPipeline$1$1","f$IntPipeline$10":"g$IntPipeline$10","f$IntPipeline$10$1":"g$IntPipeline$10$1","f$IntPipeline$2":"g$IntPipeline$2","f$IntPipeline$2$1":"g$IntPipeline$2$1","f$IntPipeline$3":"g$IntPipeline$3","f$IntPipeline$3$1":"g$IntPipeline$3$1","f$IntPipeline$4":"g$IntPipeline$4","f$IntPipeline$4$1":"g$IntPipeline$4$1","f$IntPipeline$5":"g$IntPipeline$5","f$IntPipeline$5$1":"g$IntPipeline$5$1","f$IntPipeline$6":"g$IntPipeline$6","f$IntPipeline$6$1":"g$IntPipeline$6$1","f$IntPipeline$7":"g$IntPipeline$7","f$IntPipeline$7$1":"g$IntPipeline$7$1","f$IntPipeline$8":"g$IntPipeline$8","f$IntPipeline$9":"g$IntPipeline$9","f$IntPipeline$9$1":"g$IntPipeline$9$1","f$IntPipeline$Head":"g$IntPipeline$Head","f$IntPipeline$StatefulOp":"g$IntPipeline$StatefulOp","f$IntPipeline$StatelessOp":"g$IntPipeline$StatelessOp","f$IntStream":"g$IntStream","f$IntStream$1":"g$IntStream$1","f$IntStream$2":"g$IntStream$2","f$IntStream$Builder":"g$IntStream$Builder","f$LongPipeline":"g$LongPipeline","f$LongPipeline$1":"g$LongPipeline$1","f$LongPipeline$1$1":"g$LongPipeline$1$1","f$LongPipeline$2":"g$LongPipeline$2","f$LongPipeline$2$1":"g$LongPipeline$2$1","f$LongPipeline$3":"g$LongPipeline$3","f$LongPipeline$3$1":"g$LongPipeline$3$1","f$LongPipeline$4":"g$LongPipeline$4","f$LongPipeline$4$1":"g$LongPipeline$4$1","f$LongPipeline$5":"g$LongPipeline$5","f$LongPipeline$5$1":"g$LongPipeline$5$1","f$LongPipeline$6":"g$LongPipeline$6","f$LongPipeline$6$1":"g$LongPipeline$6$1","f$LongPipeline$7":"g$LongPipeline$7","f$LongPipeline$8":"g$LongPipeline$8","f$LongPipeline$8$1":"g$LongPipeline$8$1","f$LongPipeline$9":"g$LongPipeline$9","f$LongPipeline$9$1":"g$LongPipeline$9$1","f$LongPipeline$Head":"g$LongPipeline$Head","f$LongPipeline$StatefulOp":"g$LongPipeline$StatefulOp","f$LongPipeline$StatelessOp":"g$LongPipeline$StatelessOp","f$LongStream":"g$LongStream","f$LongStream$1":"g$LongStream$1","f$LongStream$2":"g$LongStream$2","f$LongStream$Builder":"g$LongStream$Builder","f$MatchOps":"g$MatchOps","f$MatchOps$1MatchSink":"g$MatchOps$1MatchSink","f$MatchOps$2MatchSink":"g$MatchOps$2MatchSink","f$MatchOps$3MatchSink":"g$MatchOps$3MatchSink","f$MatchOps$4MatchSink":"g$MatchOps$4MatchSink","f$MatchOps$BooleanTerminalSink":"g$MatchOps$BooleanTerminalSink","f$MatchOps$MatchKind":"g$MatchOps$MatchKind","f$MatchOps$MatchOp":"g$MatchOps$MatchOp","f$MatchOps$MatchTask":"g$MatchOps$MatchTask","f$Node":"g$Node","f$Node$Builder":"g$Node$Builder","f$Node$Builder$OfDouble":"g$Node$Builder$OfDouble","f$Node$Builder$OfInt":"g$Node$Builder$OfInt","f$Node$Builder$OfLong":"g$Node$Builder$OfLong","f$Node$OfDouble":"g$Node$OfDouble","f$Node$OfInt":"g$Node$OfInt","f$Node$OfLong":"g$Node$OfLong","f$Node$OfPrimitive":"g$Node$OfPrimitive","f$Nodes":"g$Nodes","f$Nodes$1":"g$Nodes$1","f$Nodes$AbstractConcNode":"g$Nodes$AbstractConcNode","f$Nodes$ArrayNode":"g$Nodes$ArrayNode","f$Nodes$CollectionNode":"g$Nodes$CollectionNode","f$Nodes$CollectorTask":"g$Nodes$CollectorTask","f$Nodes$CollectorTask$OfDouble":"g$Nodes$CollectorTask$OfDouble","f$Nodes$CollectorTask$OfInt":"g$Nodes$CollectorTask$OfInt","f$Nodes$CollectorTask$OfLong":"g$Nodes$CollectorTask$OfLong","f$Nodes$CollectorTask$OfRef":"g$Nodes$CollectorTask$OfRef","f$Nodes$ConcNode":"g$Nodes$ConcNode","f$Nodes$ConcNode$OfDouble":"g$Nodes$ConcNode$OfDouble","f$Nodes$ConcNode$OfInt":"g$Nodes$ConcNode$OfInt","f$Nodes$ConcNode$OfLong":"g$Nodes$ConcNode$OfLong","f$Nodes$ConcNode$OfPrimitive":"g$Nodes$ConcNode$OfPrimitive","f$Nodes$DoubleArrayNode":"g$Nodes$DoubleArrayNode","f$Nodes$DoubleFixedNodeBuilder":"g$Nodes$DoubleFixedNodeBuilder","f$Nodes$DoubleSpinedNodeBuilder":"g$Nodes$DoubleSpinedNodeBuilder","f$Nodes$EmptyNode":"g$Nodes$EmptyNode","f$Nodes$EmptyNode$OfDouble":"g$Nodes$EmptyNode$OfDouble","f$Nodes$EmptyNode$OfInt":"g$Nodes$EmptyNode$OfInt","f$Nodes$EmptyNode$OfLong":"g$Nodes$EmptyNode$OfLong","f$Nodes$EmptyNode$OfRef":"g$Nodes$EmptyNode$OfRef","f$Nodes$FixedNodeBuilder":"g$Nodes$FixedNodeBuilder","f$Nodes$IntArrayNode":"g$Nodes$IntArrayNode","f$Nodes$IntFixedNodeBuilder":"g$Nodes$IntFixedNodeBuilder","f$Nodes$IntSpinedNodeBuilder":"g$Nodes$IntSpinedNodeBuilder","f$Nodes$InternalNodeSpliterator":"g$Nodes$InternalNodeSpliterator","f$Nodes$InternalNodeSpliterator$OfDouble":"g$Nodes$InternalNodeSpliterator$OfDouble","f$Nodes$InternalNodeSpliterator$OfInt":"g$Nodes$InternalNodeSpliterator$OfInt","f$Nodes$InternalNodeSpliterator$OfLong":"g$Nodes$InternalNodeSpliterator$OfLong","f$Nodes$InternalNodeSpliterator$OfPrimitive":"g$Nodes$InternalNodeSpliterator$OfPrimitive","f$Nodes$InternalNodeSpliterator$OfRef":"g$Nodes$InternalNodeSpliterator$OfRef","f$Nodes$LongArrayNode":"g$Nodes$LongArrayNode","f$Nodes$LongFixedNodeBuilder":"g$Nodes$LongFixedNodeBuilder","f$Nodes$LongSpinedNodeBuilder":"g$Nodes$LongSpinedNodeBuilder","f$Nodes$SizedCollectorTask":"g$Nodes$SizedCollectorTask","f$Nodes$SizedCollectorTask$OfDouble":"g$Nodes$SizedCollectorTask$OfDouble","f$Nodes$SizedCollectorTask$OfInt":"g$Nodes$SizedCollectorTask$OfInt","f$Nodes$SizedCollectorTask$OfLong":"g$Nodes$SizedCollectorTask$OfLong","f$Nodes$SizedCollectorTask$OfRef":"g$Nodes$SizedCollectorTask$OfRef","f$Nodes$SpinedNodeBuilder":"g$Nodes$SpinedNodeBuilder","f$Nodes$ToArrayTask":"g$Nodes$ToArrayTask","f$Nodes$ToArrayTask$OfDouble":"g$Nodes$ToArrayTask$OfDouble","f$Nodes$ToArrayTask$OfInt":"g$Nodes$ToArrayTask$OfInt","f$Nodes$ToArrayTask$OfLong":"g$Nodes$ToArrayTask$OfLong","f$Nodes$ToArrayTask$OfPrimitive":"g$Nodes$ToArrayTask$OfPrimitive","f$Nodes$ToArrayTask$OfRef":"g$Nodes$ToArrayTask$OfRef","f$PipelineHelper":"g$PipelineHelper","f$ReduceOps":"g$ReduceOps","f$ReduceOps$1":"g$ReduceOps$1","f$ReduceOps$10":"g$ReduceOps$10","f$ReduceOps$10ReducingSink":"g$ReduceOps$10ReducingSink","f$ReduceOps$11":"g$ReduceOps$11","f$ReduceOps$11ReducingSink":"g$ReduceOps$11ReducingSink","f$ReduceOps$12":"g$ReduceOps$12","f$ReduceOps$12ReducingSink":"g$ReduceOps$12ReducingSink","f$ReduceOps$13":"g$ReduceOps$13","f$ReduceOps$13ReducingSink":"g$ReduceOps$13ReducingSink","f$ReduceOps$14":"g$ReduceOps$14","f$ReduceOps$15":"g$ReduceOps$15","f$ReduceOps$16":"g$ReduceOps$16","f$ReduceOps$17":"g$ReduceOps$17","f$ReduceOps$1ReducingSink":"g$ReduceOps$1ReducingSink","f$ReduceOps$2":"g$ReduceOps$2","f$ReduceOps$2ReducingSink":"g$ReduceOps$2ReducingSink","f$ReduceOps$3":"g$ReduceOps$3","f$ReduceOps$3ReducingSink":"g$ReduceOps$3ReducingSink","f$ReduceOps$4":"g$ReduceOps$4","f$ReduceOps$4ReducingSink":"g$ReduceOps$4ReducingSink","f$ReduceOps$5":"g$ReduceOps$5","f$ReduceOps$5ReducingSink":"g$ReduceOps$5ReducingSink","f$ReduceOps$6":"g$ReduceOps$6","f$ReduceOps$6ReducingSink":"g$ReduceOps$6ReducingSink","f$ReduceOps$7":"g$ReduceOps$7","f$ReduceOps$7ReducingSink":"g$ReduceOps$7ReducingSink","f$ReduceOps$8":"g$ReduceOps$8","f$ReduceOps$8ReducingSink":"g$ReduceOps$8ReducingSink","f$ReduceOps$9":"g$ReduceOps$9","f$ReduceOps$9ReducingSink":"g$ReduceOps$9ReducingSink","f$ReduceOps$AccumulatingSink":"g$ReduceOps$AccumulatingSink","f$ReduceOps$Box":"g$ReduceOps$Box","f$ReduceOps$CountingSink":"g$ReduceOps$CountingSink","f$ReduceOps$CountingSink$OfDouble":"g$ReduceOps$CountingSink$OfDouble","f$ReduceOps$CountingSink$OfInt":"g$ReduceOps$CountingSink$OfInt","f$ReduceOps$CountingSink$OfLong":"g$ReduceOps$CountingSink$OfLong","f$ReduceOps$CountingSink$OfRef":"g$ReduceOps$CountingSink$OfRef","f$ReduceOps$ReduceOp":"g$ReduceOps$ReduceOp","f$ReduceOps$ReduceTask":"g$ReduceOps$ReduceTask","f$ReferencePipeline":"g$ReferencePipeline","f$ReferencePipeline$1":"g$ReferencePipeline$1","f$ReferencePipeline$10":"g$ReferencePipeline$10","f$ReferencePipeline$10$1":"g$ReferencePipeline$10$1","f$ReferencePipeline$11":"g$ReferencePipeline$11","f$ReferencePipeline$11$1":"g$ReferencePipeline$11$1","f$ReferencePipeline$2":"g$ReferencePipeline$2","f$ReferencePipeline$2$1":"g$ReferencePipeline$2$1","f$ReferencePipeline$3":"g$ReferencePipeline$3","f$ReferencePipeline$3$1":"g$ReferencePipeline$3$1","f$ReferencePipeline$4":"g$ReferencePipeline$4","f$ReferencePipeline$4$1":"g$ReferencePipeline$4$1","f$ReferencePipeline$5":"g$ReferencePipeline$5","f$ReferencePipeline$5$1":"g$ReferencePipeline$5$1","f$ReferencePipeline$6":"g$ReferencePipeline$6","f$ReferencePipeline$6$1":"g$ReferencePipeline$6$1","f$ReferencePipeline$7":"g$ReferencePipeline$7","f$ReferencePipeline$7$1":"g$ReferencePipeline$7$1","f$ReferencePipeline$8":"g$ReferencePipeline$8","f$ReferencePipeline$8$1":"g$ReferencePipeline$8$1","f$ReferencePipeline$9":"g$ReferencePipeline$9","f$ReferencePipeline$9$1":"g$ReferencePipeline$9$1","f$ReferencePipeline$Head":"g$ReferencePipeline$Head","f$ReferencePipeline$StatefulOp":"g$ReferencePipeline$StatefulOp","f$ReferencePipeline$StatelessOp":"g$ReferencePipeline$StatelessOp","f$Sink":"g$Sink","f$Sink$ChainedDouble":"g$Sink$ChainedDouble","f$Sink$ChainedInt":"g$Sink$ChainedInt","f$Sink$ChainedLong":"g$Sink$ChainedLong","f$Sink$ChainedReference":"g$Sink$ChainedReference","f$Sink$OfDouble":"g$Sink$OfDouble","f$Sink$OfInt":"g$Sink$OfInt","f$Sink$OfLong":"g$Sink$OfLong","f$SliceOps":"g$SliceOps","f$SliceOps$1":"g$SliceOps$1","f$SliceOps$1$1":"g$SliceOps$1$1","f$SliceOps$2":"g$SliceOps$2","f$SliceOps$2$1":"g$SliceOps$2$1","f$SliceOps$3":"g$SliceOps$3","f$SliceOps$3$1":"g$SliceOps$3$1","f$SliceOps$4":"g$SliceOps$4","f$SliceOps$4$1":"g$SliceOps$4$1","f$SliceOps$5":"g$SliceOps$5","f$SliceOps$SliceTask":"g$SliceOps$SliceTask","f$SortedOps":"g$SortedOps","f$SortedOps$AbstractDoubleSortingSink":"g$SortedOps$AbstractDoubleSortingSink","f$SortedOps$AbstractIntSortingSink":"g$SortedOps$AbstractIntSortingSink","f$SortedOps$AbstractLongSortingSink":"g$SortedOps$AbstractLongSortingSink","f$SortedOps$AbstractRefSortingSink":"g$SortedOps$AbstractRefSortingSink","f$SortedOps$DoubleSortingSink":"g$SortedOps$DoubleSortingSink","f$SortedOps$IntSortingSink":"g$SortedOps$IntSortingSink","f$SortedOps$LongSortingSink":"g$SortedOps$LongSortingSink","f$SortedOps$OfDouble":"g$SortedOps$OfDouble","f$SortedOps$OfInt":"g$SortedOps$OfInt","f$SortedOps$OfLong":"g$SortedOps$OfLong","f$SortedOps$OfRef":"g$SortedOps$OfRef","f$SortedOps$RefSortingSink":"g$SortedOps$RefSortingSink","f$SortedOps$SizedDoubleSortingSink":"g$SortedOps$SizedDoubleSortingSink","f$SortedOps$SizedIntSortingSink":"g$SortedOps$SizedIntSortingSink","f$SortedOps$SizedLongSortingSink":"g$SortedOps$SizedLongSortingSink","f$SortedOps$SizedRefSortingSink":"g$SortedOps$SizedRefSortingSink","f$SpinedBuffer":"g$SpinedBuffer","f$SpinedBuffer$1Splitr":"g$SpinedBuffer$1Splitr","f$SpinedBuffer$OfDouble":"g$SpinedBuffer$OfDouble","f$SpinedBuffer$OfDouble$1Splitr":"g$SpinedBuffer$OfDouble$1Splitr","f$SpinedBuffer$OfInt":"g$SpinedBuffer$OfInt","f$SpinedBuffer$OfInt$1Splitr":"g$SpinedBuffer$OfInt$1Splitr","f$SpinedBuffer$OfLong":"g$SpinedBuffer$OfLong","f$SpinedBuffer$OfLong$1Splitr":"g$SpinedBuffer$OfLong$1Splitr","f$SpinedBuffer$OfPrimitive":"g$SpinedBuffer$OfPrimitive","f$SpinedBuffer$OfPrimitive$BaseSpliterator":"g$SpinedBuffer$OfPrimitive$BaseSpliterator","f$StackWalkerApiFlips":"g$StackWalkerApiFlips","f$StackWalkerApiFlips$FunctionStreamWrapper":"g$StackWalkerApiFlips$FunctionStreamWrapper","f$Stream":"g$Stream","f$Stream$1":"g$Stream$1","f$Stream$2":"g$Stream$2","f$Stream$Builder":"g$Stream$Builder","f$StreamApiFlips":"g$StreamApiFlips","f$StreamOpFlag":"g$StreamOpFlag","f$StreamOpFlag$MaskBuilder":"g$StreamOpFlag$MaskBuilder","f$StreamOpFlag$Type":"g$StreamOpFlag$Type","f$StreamShape":"g$StreamShape","f$StreamSpliterators":"g$StreamSpliterators","f$StreamSpliterators$AbstractWrappingSpliterator":"g$StreamSpliterators$AbstractWrappingSpliterator","f$StreamSpliterators$ArrayBuffer":"g$StreamSpliterators$ArrayBuffer","f$StreamSpliterators$ArrayBuffer$OfDouble":"g$StreamSpliterators$ArrayBuffer$OfDouble","f$StreamSpliterators$ArrayBuffer$OfInt":"g$StreamSpliterators$ArrayBuffer$OfInt","f$StreamSpliterators$ArrayBuffer$OfLong":"g$StreamSpliterators$ArrayBuffer$OfLong","f$StreamSpliterators$ArrayBuffer$OfPrimitive":"g$StreamSpliterators$ArrayBuffer$OfPrimitive","f$StreamSpliterators$ArrayBuffer$OfRef":"g$StreamSpliterators$ArrayBuffer$OfRef","f$StreamSpliterators$DelegatingSpliterator":"g$StreamSpliterators$DelegatingSpliterator","f$StreamSpliterators$DelegatingSpliterator$OfDouble":"g$StreamSpliterators$DelegatingSpliterator$OfDouble","f$StreamSpliterators$DelegatingSpliterator$OfInt":"g$StreamSpliterators$DelegatingSpliterator$OfInt","f$StreamSpliterators$DelegatingSpliterator$OfLong":"g$StreamSpliterators$DelegatingSpliterator$OfLong","f$StreamSpliterators$DelegatingSpliterator$OfPrimitive":"g$StreamSpliterators$DelegatingSpliterator$OfPrimitive","f$StreamSpliterators$DistinctSpliterator":"g$StreamSpliterators$DistinctSpliterator","f$StreamSpliterators$DoubleWrappingSpliterator":"g$StreamSpliterators$DoubleWrappingSpliterator","f$StreamSpliterators$InfiniteSupplyingSpliterator":"g$StreamSpliterators$InfiniteSupplyingSpliterator","f$StreamSpliterators$InfiniteSupplyingSpliterator$OfDouble":"g$StreamSpliterators$InfiniteSupplyingSpliterator$OfDouble","f$StreamSpliterators$InfiniteSupplyingSpliterator$OfInt":"g$StreamSpliterators$InfiniteSupplyingSpliterator$OfInt","f$StreamSpliterators$InfiniteSupplyingSpliterator$OfLong":"g$StreamSpliterators$InfiniteSupplyingSpliterator$OfLong","f$StreamSpliterators$InfiniteSupplyingSpliterator$OfRef":"g$StreamSpliterators$InfiniteSupplyingSpliterator$OfRef","f$StreamSpliterators$IntWrappingSpliterator":"g$StreamSpliterators$IntWrappingSpliterator","f$StreamSpliterators$LongWrappingSpliterator":"g$StreamSpliterators$LongWrappingSpliterator","f$StreamSpliterators$SliceSpliterator":"g$StreamSpliterators$SliceSpliterator","f$StreamSpliterators$SliceSpliterator$OfDouble":"g$StreamSpliterators$SliceSpliterator$OfDouble","f$StreamSpliterators$SliceSpliterator$OfInt":"g$StreamSpliterators$SliceSpliterator$OfInt","f$StreamSpliterators$SliceSpliterator$OfLong":"g$StreamSpliterators$SliceSpliterator$OfLong","f$StreamSpliterators$SliceSpliterator$OfPrimitive":"g$StreamSpliterators$SliceSpliterator$OfPrimitive","f$StreamSpliterators$SliceSpliterator$OfRef":"g$StreamSpliterators$SliceSpliterator$OfRef","f$StreamSpliterators$UnorderedSliceSpliterator":"g$StreamSpliterators$UnorderedSliceSpliterator","f$StreamSpliterators$UnorderedSliceSpliterator$OfDouble":"g$StreamSpliterators$UnorderedSliceSpliterator$OfDouble","f$StreamSpliterators$UnorderedSliceSpliterator$OfInt":"g$StreamSpliterators$UnorderedSliceSpliterator$OfInt","f$StreamSpliterators$UnorderedSliceSpliterator$OfLong":"g$StreamSpliterators$UnorderedSliceSpliterator$OfLong","f$StreamSpliterators$UnorderedSliceSpliterator$OfPrimitive":"g$StreamSpliterators$UnorderedSliceSpliterator$OfPrimitive","f$StreamSpliterators$UnorderedSliceSpliterator$OfRef":"g$StreamSpliterators$UnorderedSliceSpliterator$OfRef","f$StreamSpliterators$UnorderedSliceSpliterator$PermitStatus":"g$StreamSpliterators$UnorderedSliceSpliterator$PermitStatus","f$StreamSpliterators$WrappingSpliterator":"g$StreamSpliterators$WrappingSpliterator","f$StreamSupport":"g$StreamSupport","f$Streams":"g$Streams","f$Streams$1":"g$Streams$1","f$Streams$2":"g$Streams$2","f$Streams$AbstractStreamBuilderImpl":"g$Streams$AbstractStreamBuilderImpl","f$Streams$ConcatSpliterator":"g$Streams$ConcatSpliterator","f$Streams$ConcatSpliterator$OfDouble":"g$Streams$ConcatSpliterator$OfDouble","f$Streams$ConcatSpliterator$OfInt":"g$Streams$ConcatSpliterator$OfInt","f$Streams$ConcatSpliterator$OfLong":"g$Streams$ConcatSpliterator$OfLong","f$Streams$ConcatSpliterator$OfPrimitive":"g$Streams$ConcatSpliterator$OfPrimitive","f$Streams$ConcatSpliterator$OfRef":"g$Streams$ConcatSpliterator$OfRef","f$Streams$DoubleStreamBuilderImpl":"g$Streams$DoubleStreamBuilderImpl","f$Streams$IntStreamBuilderImpl":"g$Streams$IntStreamBuilderImpl","f$Streams$LongStreamBuilderImpl":"g$Streams$LongStreamBuilderImpl","f$Streams$RangeIntSpliterator":"g$Streams$RangeIntSpliterator","f$Streams$RangeLongSpliterator":"g$Streams$RangeLongSpliterator","f$Streams$StreamBuilderImpl":"g$Streams$StreamBuilderImpl","f$TerminalOp":"g$TerminalOp","f$TerminalSink":"g$TerminalSink","f$Tripwire":"g$Tripwire","f$WhileOps":"g$WhileOps","f$WhileOps$1":"g$WhileOps$1","f$WhileOps$1$1":"g$WhileOps$1$1","f$WhileOps$1Op":"g$WhileOps$1Op","f$WhileOps$1Op$1OpSink":"g$WhileOps$1Op$1OpSink","f$WhileOps$2":"g$WhileOps$2","f$WhileOps$2$1":"g$WhileOps$2$1","f$WhileOps$2Op":"g$WhileOps$2Op","f$WhileOps$2Op$1OpSink":"g$WhileOps$2Op$1OpSink","f$WhileOps$3":"g$WhileOps$3","f$WhileOps$3$1":"g$WhileOps$3$1","f$WhileOps$3Op":"g$WhileOps$3Op","f$WhileOps$3Op$1OpSink":"g$WhileOps$3Op$1OpSink","f$WhileOps$4":"g$WhileOps$4","f$WhileOps$4$1":"g$WhileOps$4$1","f$WhileOps$4Op":"g$WhileOps$4Op","f$WhileOps$4Op$1OpSink":"g$WhileOps$4Op$1OpSink","f$WhileOps$DropWhileOp":"g$WhileOps$DropWhileOp","f$WhileOps$DropWhileSink":"g$WhileOps$DropWhileSink","f$WhileOps$DropWhileTask":"g$WhileOps$DropWhileTask","f$WhileOps$TakeWhileTask":"g$WhileOps$TakeWhileTask","f$WhileOps$UnorderedWhileSpliterator":"g$WhileOps$UnorderedWhileSpliterator","f$WhileOps$UnorderedWhileSpliterator$OfDouble":"g$WhileOps$UnorderedWhileSpliterator$OfDouble","f$WhileOps$UnorderedWhileSpliterator$OfDouble$Dropping":"g$WhileOps$UnorderedWhileSpliterator$OfDouble$Dropping","f$WhileOps$UnorderedWhileSpliterator$OfDouble$Taking":"g$WhileOps$UnorderedWhileSpliterator$OfDouble$Taking","f$WhileOps$UnorderedWhileSpliterator$OfInt":"g$WhileOps$UnorderedWhileSpliterator$OfInt","f$WhileOps$UnorderedWhileSpliterator$OfInt$Dropping":"g$WhileOps$UnorderedWhileSpliterator$OfInt$Dropping","f$WhileOps$UnorderedWhileSpliterator$OfInt$Taking":"g$WhileOps$UnorderedWhileSpliterator$OfInt$Taking","f$WhileOps$UnorderedWhileSpliterator$OfLong":"g$WhileOps$UnorderedWhileSpliterator$OfLong","f$WhileOps$UnorderedWhileSpliterator$OfLong$Dropping":"g$WhileOps$UnorderedWhileSpliterator$OfLong$Dropping","f$WhileOps$UnorderedWhileSpliterator$OfLong$Taking":"g$WhileOps$UnorderedWhileSpliterator$OfLong$Taking","f$WhileOps$UnorderedWhileSpliterator$OfRef":"g$WhileOps$UnorderedWhileSpliterator$OfRef","f$WhileOps$UnorderedWhileSpliterator$OfRef$Dropping":"g$WhileOps$UnorderedWhileSpliterator$OfRef$Dropping","f$WhileOps$UnorderedWhileSpliterator$OfRef$Taking":"g$WhileOps$UnorderedWhileSpliterator$OfRef$Taking","h$ConcurrentHashMap":"i$ConcurrentHashMap","h$ConcurrentHashMap$BaseIterator":"i$ConcurrentHashMap$BaseIterator","h$ConcurrentHashMap$BulkTask":"i$ConcurrentHashMap$BulkTask","h$ConcurrentHashMap$CollectionView":"i$ConcurrentHashMap$CollectionView","h$ConcurrentHashMap$CounterCell":"i$ConcurrentHashMap$CounterCell","h$ConcurrentHashMap$EntryIterator":"i$ConcurrentHashMap$EntryIterator","h$ConcurrentHashMap$EntrySetView":"i$ConcurrentHashMap$EntrySetView","h$ConcurrentHashMap$EntrySpliterator":"i$ConcurrentHashMap$EntrySpliterator","h$ConcurrentHashMap$ForEachEntryTask":"i$ConcurrentHashMap$ForEachEntryTask","h$ConcurrentHashMap$ForEachKeyTask":"i$ConcurrentHashMap$ForEachKeyTask","h$ConcurrentHashMap$ForEachMappingTask":"i$ConcurrentHashMap$ForEachMappingTask","h$ConcurrentHashMap$ForEachTransformedEntryTask":"i$ConcurrentHashMap$ForEachTransformedEntryTask","h$ConcurrentHashMap$ForEachTransformedKeyTask":"i$ConcurrentHashMap$ForEachTransformedKeyTask","h$ConcurrentHashMap$ForEachTransformedMappingTask":"i$ConcurrentHashMap$ForEachTransformedMappingTask","h$ConcurrentHashMap$ForEachTransformedValueTask":"i$ConcurrentHashMap$ForEachTransformedValueTask","h$ConcurrentHashMap$ForEachValueTask":"i$ConcurrentHashMap$ForEachValueTask","h$ConcurrentHashMap$ForwardingNode":"i$ConcurrentHashMap$ForwardingNode","h$ConcurrentHashMap$KeyIterator":"i$ConcurrentHashMap$KeyIterator","h$ConcurrentHashMap$KeySetView":"i$ConcurrentHashMap$KeySetView","h$ConcurrentHashMap$KeySpliterator":"i$ConcurrentHashMap$KeySpliterator","h$ConcurrentHashMap$MapEntry":"i$ConcurrentHashMap$MapEntry","h$ConcurrentHashMap$MapReduceEntriesTask":"i$ConcurrentHashMap$MapReduceEntriesTask","h$ConcurrentHashMap$MapReduceEntriesToDoubleTask":"i$ConcurrentHashMap$MapReduceEntriesToDoubleTask","h$ConcurrentHashMap$MapReduceEntriesToIntTask":"i$ConcurrentHashMap$MapReduceEntriesToIntTask","h$ConcurrentHashMap$MapReduceEntriesToLongTask":"i$ConcurrentHashMap$MapReduceEntriesToLongTask","h$ConcurrentHashMap$MapReduceKeysTask":"i$ConcurrentHashMap$MapReduceKeysTask","h$ConcurrentHashMap$MapReduceKeysToDoubleTask":"i$ConcurrentHashMap$MapReduceKeysToDoubleTask","h$ConcurrentHashMap$MapReduceKeysToIntTask":"i$ConcurrentHashMap$MapReduceKeysToIntTask","h$ConcurrentHashMap$MapReduceKeysToLongTask":"i$ConcurrentHashMap$MapReduceKeysToLongTask","h$ConcurrentHashMap$MapReduceMappingsTask":"i$ConcurrentHashMap$MapReduceMappingsTask","h$ConcurrentHashMap$MapReduceMappingsToDoubleTask":"i$ConcurrentHashMap$MapReduceMappingsToDoubleTask","h$ConcurrentHashMap$MapReduceMappingsToIntTask":"i$ConcurrentHashMap$MapReduceMappingsToIntTask","h$ConcurrentHashMap$MapReduceMappingsToLongTask":"i$ConcurrentHashMap$MapReduceMappingsToLongTask","h$ConcurrentHashMap$MapReduceValuesTask":"i$ConcurrentHashMap$MapReduceValuesTask","h$ConcurrentHashMap$MapReduceValuesToDoubleTask":"i$ConcurrentHashMap$MapReduceValuesToDoubleTask","h$ConcurrentHashMap$MapReduceValuesToIntTask":"i$ConcurrentHashMap$MapReduceValuesToIntTask","h$ConcurrentHashMap$MapReduceValuesToLongTask":"i$ConcurrentHashMap$MapReduceValuesToLongTask","h$ConcurrentHashMap$Node":"i$ConcurrentHashMap$Node","h$ConcurrentHashMap$ReduceEntriesTask":"i$ConcurrentHashMap$ReduceEntriesTask","h$ConcurrentHashMap$ReduceKeysTask":"i$ConcurrentHashMap$ReduceKeysTask","h$ConcurrentHashMap$ReduceValuesTask":"i$ConcurrentHashMap$ReduceValuesTask","h$ConcurrentHashMap$ReservationNode":"i$ConcurrentHashMap$ReservationNode","h$ConcurrentHashMap$SearchEntriesTask":"i$ConcurrentHashMap$SearchEntriesTask","h$ConcurrentHashMap$SearchKeysTask":"i$ConcurrentHashMap$SearchKeysTask","h$ConcurrentHashMap$SearchMappingsTask":"i$ConcurrentHashMap$SearchMappingsTask","h$ConcurrentHashMap$SearchValuesTask":"i$ConcurrentHashMap$SearchValuesTask","h$ConcurrentHashMap$Segment":"i$ConcurrentHashMap$Segment","h$ConcurrentHashMap$TableStack":"i$ConcurrentHashMap$TableStack","h$ConcurrentHashMap$Traverser":"i$ConcurrentHashMap$Traverser","h$ConcurrentHashMap$TreeBin":"i$ConcurrentHashMap$TreeBin","h$ConcurrentHashMap$TreeNode":"i$ConcurrentHashMap$TreeNode","h$ConcurrentHashMap$ValueIterator":"i$ConcurrentHashMap$ValueIterator","h$ConcurrentHashMap$ValueSpliterator":"i$ConcurrentHashMap$ValueSpliterator","h$ConcurrentHashMap$ValuesView":"i$ConcurrentHashMap$ValuesView","h$ThreadLocalRandom":"i$ThreadLocalRandom","h$ThreadLocalRandom$1":"i$ThreadLocalRandom$1","h$ThreadLocalRandom$2":"i$ThreadLocalRandom$2","h$ThreadLocalRandom$RandomDoublesSpliterator":"i$ThreadLocalRandom$RandomDoublesSpliterator","h$ThreadLocalRandom$RandomIntsSpliterator":"i$ThreadLocalRandom$RandomIntsSpliterator","h$ThreadLocalRandom$RandomLongsSpliterator":"i$ThreadLocalRandom$RandomLongsSpliterator","s$DesugarBufferedReader":"t$DesugarBufferedReader","s$DesugarBufferedReaderLinesIterator":"t$DesugarBufferedReaderLinesIterator","u$DesugarAtomicInteger":"v$DesugarAtomicInteger","u$DesugarAtomicLong":"v$DesugarAtomicLong","u$DesugarAtomicReference":"v$DesugarAtomicReference"},"maintain_type":["c$BiConsumer","c$BiFunction","c$BiPredicate","c$BinaryOperator","c$BooleanSupplier","c$Consumer","c$DoubleBinaryOperator","c$DoubleConsumer","c$DoubleFunction","c$DoublePredicate","c$DoubleSupplier","c$DoubleToIntFunction","c$DoubleToLongFunction","c$DoubleUnaryOperator","c$Function","c$IntBinaryOperator","c$IntConsumer","c$IntFunction","c$IntPredicate","c$IntSupplier","c$IntToDoubleFunction","c$IntToLongFunction","c$IntUnaryOperator","c$LongBinaryOperator","c$LongConsumer","c$LongFunction","c$LongPredicate","c$LongSupplier","c$LongToDoubleFunction","c$LongToIntFunction","c$LongUnaryOperator","c$ObjDoubleConsumer","c$ObjIntConsumer","c$ObjLongConsumer","c$Predicate","c$Supplier","c$ToDoubleBiFunction","c$ToDoubleFunction","c$ToIntBiFunction","c$ToIntFunction","c$ToLongBiFunction","c$ToLongFunction","c$UnaryOperator","s$UncheckedIOException"],"rewrite_derived_type_only":{"a$Iterable":"x$Iterable","b$Collection":"k$Collection","b$Comparator":"k$Comparator","b$Iterator":"k$Iterator","b$LinkedHashSet":"k$LinkedHashSet","b$List":"k$List","b$Map":"k$Map","b$Map$Entry":"k$Map$Entry","b$Set":"k$Set","b$SortedSet":"k$SortedSet","c$BiConsumer":"w$BiConsumer","c$BiFunction":"w$BiFunction","c$BiPredicate":"w$BiPredicate","c$BinaryOperator":"w$BinaryOperator","c$BooleanSupplier":"w$BooleanSupplier","c$Consumer":"w$Consumer","c$DoubleBinaryOperator":"w$DoubleBinaryOperator","c$DoubleConsumer":"w$DoubleConsumer","c$DoubleFunction":"w$DoubleFunction","c$DoublePredicate":"w$DoublePredicate","c$DoubleSupplier":"w$DoubleSupplier","c$DoubleToIntFunction":"w$DoubleToIntFunction","c$DoubleToLongFunction":"w$DoubleToLongFunction","c$DoubleUnaryOperator":"w$DoubleUnaryOperator","c$Function":"w$Function","c$IntBinaryOperator":"w$IntBinaryOperator","c$IntConsumer":"w$IntConsumer","c$IntFunction":"w$IntFunction","c$IntPredicate":"w$IntPredicate","c$IntSupplier":"w$IntSupplier","c$IntToDoubleFunction":"w$IntToDoubleFunction","c$IntToLongFunction":"w$IntToLongFunction","c$IntUnaryOperator":"w$IntUnaryOperator","c$LongBinaryOperator":"w$LongBinaryOperator","c$LongConsumer":"w$LongConsumer","c$LongFunction":"w$LongFunction","c$LongPredicate":"w$LongPredicate","c$LongSupplier":"w$LongSupplier","c$LongToDoubleFunction":"w$LongToDoubleFunction","c$LongToIntFunction":"w$LongToIntFunction","c$LongUnaryOperator":"w$LongUnaryOperator","c$ObjDoubleConsumer":"w$ObjDoubleConsumer","c$ObjIntConsumer":"w$ObjIntConsumer","c$ObjLongConsumer":"w$ObjLongConsumer","c$Predicate":"w$Predicate","c$Supplier":"w$Supplier","c$ToDoubleBiFunction":"w$ToDoubleBiFunction","c$ToDoubleFunction":"w$ToDoubleFunction","c$ToIntBiFunction":"w$ToIntBiFunction","c$ToIntFunction":"w$ToIntFunction","c$ToLongBiFunction":"w$ToLongBiFunction","c$ToLongFunction":"w$ToLongFunction","c$UnaryOperator":"w$UnaryOperator","h$ConcurrentMap":"i$ConcurrentMap","s$BufferedReader":"t$BufferedReader","s$UncheckedIOException":"t$UncheckedIOException"},"static_retarget":{"b$Spliterator b$Arrays#spliterator(a$Object[])":"b$Spliterator b$DesugarArrays#spliterator(a$Object[])","b$Spliterator b$Arrays#spliterator(a$Object[], int, int)":"b$Spliterator b$DesugarArrays#spliterator(a$Object[], int, int)","b$Spliterator$OfDouble b$Arrays#spliterator(double[])":"b$Spliterator$OfDouble b$DesugarArrays#spliterator(double[])","b$Spliterator$OfDouble b$Arrays#spliterator(double[], int, int)":"b$Spliterator$OfDouble b$DesugarArrays#spliterator(double[], int, int)","b$Spliterator$OfInt b$Arrays#spliterator(int[])":"b$Spliterator$OfInt b$DesugarArrays#spliterator(int[])","b$Spliterator$OfInt b$Arrays#spliterator(int[], int, int)":"b$Spliterator$OfInt b$DesugarArrays#spliterator(int[], int, int)","b$Spliterator$OfLong b$Arrays#spliterator(long[])":"b$Spliterator$OfLong b$DesugarArrays#spliterator(long[])","b$Spliterator$OfLong b$Arrays#spliterator(long[], int, int)":"b$Spliterator$OfLong b$DesugarArrays#spliterator(long[], int, int)","f$DoubleStream b$Arrays#stream(double[])":"f$DoubleStream b$DesugarArrays#stream(double[])","f$DoubleStream b$Arrays#stream(double[], int, int)":"f$DoubleStream b$DesugarArrays#stream(double[], int, int)","f$IntStream b$Arrays#stream(int[])":"f$IntStream b$DesugarArrays#stream(int[])","f$IntStream b$Arrays#stream(int[], int, int)":"f$IntStream b$DesugarArrays#stream(int[], int, int)","f$LongStream b$Arrays#stream(long[])":"f$LongStream b$DesugarArrays#stream(long[])","f$LongStream b$Arrays#stream(long[], int, int)":"f$LongStream b$DesugarArrays#stream(long[], int, int)","f$Stream b$Arrays#stream(a$Object[])":"f$Stream b$DesugarArrays#stream(a$Object[])","f$Stream b$Arrays#stream(a$Object[], int, int)":"f$Stream b$DesugarArrays#stream(a$Object[], int, int)"},"emulated_virtual_retarget":{"f$Stream s$BufferedReader#lines()":[["f$Stream s$BufferedReader#lines()","11"],["f$Stream s$BufferedReader#lines()","10"],["f$Stream s$DesugarBufferedReader#lines(s$BufferedReader)","-1"],{}]},"emulated_virtual_retarget_through_emulated_interface":{"b$Spliterator b$LinkedHashSet#spliterator()":"b$Spliterator b$DesugarLinkedHashSet#spliterator(b$LinkedHashSet)"},"api_generic_types_conversion":{"a$Object a$StackWalker#walk(c$Function)":["c$Function f$StackWalkerApiFlips#flipFunctionStream(c$Function)",""],"b$Set f$Collector#characteristics()":["b$Set f$StreamApiFlips#flipCharacteristicSet(b$Set)"],"f$DoubleStream f$DoubleStream#flatMap(c$DoubleFunction)":["c$DoubleFunction f$FlatMapApiFlips#flipFunctionReturningStream(c$DoubleFunction)",""],"f$DoubleStream f$Stream#flatMapToDouble(c$Function)":["c$Function f$FlatMapApiFlips#flipFunctionReturningStream(c$Function)",""],"f$IntStream f$IntStream#flatMap(c$IntFunction)":["c$IntFunction f$FlatMapApiFlips#flipFunctionReturningStream(c$IntFunction)",""],"f$IntStream f$Stream#flatMapToInt(c$Function)":["c$Function f$FlatMapApiFlips#flipFunctionReturningStream(c$Function)",""],"f$LongStream f$LongStream#flatMap(c$LongFunction)":["c$LongFunction f$FlatMapApiFlips#flipFunctionReturningStream(c$LongFunction)",""],"f$LongStream f$Stream#flatMapToLong(c$Function)":["c$Function f$FlatMapApiFlips#flipFunctionReturningStream(c$Function)",""],"f$Stream f$Stream#flatMap(c$Function)":["c$Function f$FlatMapApiFlips#flipFunctionReturningStream(c$Function)",""]},"emulated_interface":{"a$Iterable":["x$Iterable",{"b$Spliterator a$Iterable#spliterator()":[["b$Spliterator x$Iterable#spliterator()","-1"],["b$Spliterator a$Iterable#spliterator()","9"],["b$Spliterator a$Iterable#spliterator()","8"],{"b$LinkedHashSet":["b$Spliterator b$DesugarLinkedHashSet#spliterator(b$LinkedHashSet)","-1"],"b$SortedSet":["b$Spliterator b$SortedSet#spliterator()","8"],"b$Set":["b$Spliterator b$Set#spliterator()","8"],"b$List":["b$Spliterator b$List#spliterator()","8"],"b$Collection":["b$Spliterator b$Collection#spliterator()","8"]}],"void a$Iterable#forEach(c$Consumer)":[["void x$Iterable#forEach(c$Consumer)","-1"],["void a$Iterable#forEach(c$Consumer)","9"],["void a$Iterable#forEach(c$Consumer)","8"],{"b$Collection":["void b$Collection#forEach(c$Consumer)","8"]}]}],"b$Collection":["k$Collection",{"a$Object[] b$Collection#toArray(c$IntFunction)":[["a$Object[] k$Collection#toArray(c$IntFunction)","-1"],["a$Object[] b$Collection#toArray(c$IntFunction)","9"],["a$Object[] b$Collection#toArray(c$IntFunction)","8"],{}],"b$Spliterator b$Collection#spliterator()":[["b$Spliterator k$Collection#spliterator()","-1"],["b$Spliterator b$Collection#spliterator()","9"],["b$Spliterator b$Collection#spliterator()","8"],{"b$LinkedHashSet":["b$Spliterator b$DesugarLinkedHashSet#spliterator(b$LinkedHashSet)","-1"],"b$SortedSet":["b$Spliterator b$SortedSet#spliterator()","8"],"b$Set":["b$Spliterator b$Set#spliterator()","8"],"b$List":["b$Spliterator b$List#spliterator()","8"]}],"boolean b$Collection#removeIf(c$Predicate)":[["boolean k$Collection#removeIf(c$Predicate)","-1"],["boolean b$Collection#removeIf(c$Predicate)","9"],["boolean b$Collection#removeIf(c$Predicate)","8"],{}],"f$Stream b$Collection#parallelStream()":[["f$Stream k$Collection#parallelStream()","-1"],["f$Stream b$Collection#parallelStream()","9"],["f$Stream b$Collection#parallelStream()","8"],{}],"f$Stream b$Collection#stream()":[["f$Stream k$Collection#stream()","-1"],["f$Stream b$Collection#stream()","9"],["f$Stream b$Collection#stream()","8"],{}],"void b$Collection#forEach(c$Consumer)":[["void k$Collection#forEach(c$Consumer)","-1"],["void b$Collection#forEach(c$Consumer)","9"],["void b$Collection#forEach(c$Consumer)","8"],{}]}],"b$Comparator":["k$Comparator",{"b$Comparator b$Comparator#reversed()":[["b$Comparator k$Comparator#reversed()","-1"],["b$Comparator b$Comparator#reversed()","9"],["b$Comparator b$Comparator#reversed()","8"],{}],"b$Comparator b$Comparator#thenComparing(b$Comparator)":[["b$Comparator k$Comparator#thenComparing(b$Comparator)","-1"],["b$Comparator b$Comparator#thenComparing(b$Comparator)","9"],["b$Comparator b$Comparator#thenComparing(b$Comparator)","8"],{}],"b$Comparator b$Comparator#thenComparing(c$Function)":[["b$Comparator k$Comparator#thenComparing(c$Function)","-1"],["b$Comparator b$Comparator#thenComparing(c$Function)","9"],["b$Comparator b$Comparator#thenComparing(c$Function)","8"],{}],"b$Comparator b$Comparator#thenComparing(c$Function, b$Comparator)":[["b$Comparator k$Comparator#thenComparing(c$Function, b$Comparator)","-1"],["b$Comparator b$Comparator#thenComparing(c$Function, b$Comparator)","9"],["b$Comparator b$Comparator#thenComparing(c$Function, b$Comparator)","8"],{}],"b$Comparator b$Comparator#thenComparingDouble(c$ToDoubleFunction)":[["b$Comparator k$Comparator#thenComparingDouble(c$ToDoubleFunction)","-1"],["b$Comparator b$Comparator#thenComparingDouble(c$ToDoubleFunction)","9"],["b$Comparator b$Comparator#thenComparingDouble(c$ToDoubleFunction)","8"],{}],"b$Comparator b$Comparator#thenComparingInt(c$ToIntFunction)":[["b$Comparator k$Comparator#thenComparingInt(c$ToIntFunction)","-1"],["b$Comparator b$Comparator#thenComparingInt(c$ToIntFunction)","9"],["b$Comparator b$Comparator#thenComparingInt(c$ToIntFunction)","8"],{}],"b$Comparator b$Comparator#thenComparingLong(c$ToLongFunction)":[["b$Comparator k$Comparator#thenComparingLong(c$ToLongFunction)","-1"],["b$Comparator b$Comparator#thenComparingLong(c$ToLongFunction)","9"],["b$Comparator b$Comparator#thenComparingLong(c$ToLongFunction)","8"],{}]}],"b$Iterator":["k$Iterator",{"void b$Iterator#forEachRemaining(c$Consumer)":[["void k$Iterator#forEachRemaining(c$Consumer)","-1"],["void b$Iterator#forEachRemaining(c$Consumer)","9"],["void b$Iterator#forEachRemaining(c$Consumer)","8"],{}]}],"b$List":["k$List",{"b$Spliterator b$List#spliterator()":[["b$Spliterator k$List#spliterator()","-1"],["b$Spliterator b$List#spliterator()","9"],["b$Spliterator b$List#spliterator()","8"],{}],"void b$List#replaceAll(c$UnaryOperator)":[["void k$List#replaceAll(c$UnaryOperator)","-1"],["void b$List#replaceAll(c$UnaryOperator)","9"],["void b$List#replaceAll(c$UnaryOperator)","8"],{}],"void b$List#sort(b$Comparator)":[["void k$List#sort(b$Comparator)","-1"],["void b$List#sort(b$Comparator)","9"],["void b$List#sort(b$Comparator)","8"],{}]}],"b$Map":["k$Map",{"a$Object b$Map#compute(a$Object, c$BiFunction)":[["a$Object k$Map#compute(a$Object, c$BiFunction)","-1"],["a$Object b$Map#compute(a$Object, c$BiFunction)","9"],["a$Object b$Map#compute(a$Object, c$BiFunction)","8"],{"h$ConcurrentMap":["a$Object h$ConcurrentMap#compute(a$Object, c$BiFunction)","8"]}],"a$Object b$Map#computeIfAbsent(a$Object, c$Function)":[["a$Object k$Map#computeIfAbsent(a$Object, c$Function)","-1"],["a$Object b$Map#computeIfAbsent(a$Object, c$Function)","9"],["a$Object b$Map#computeIfAbsent(a$Object, c$Function)","8"],{"h$ConcurrentMap":["a$Object h$ConcurrentMap#computeIfAbsent(a$Object, c$Function)","8"]}],"a$Object b$Map#computeIfPresent(a$Object, c$BiFunction)":[["a$Object k$Map#computeIfPresent(a$Object, c$BiFunction)","-1"],["a$Object b$Map#computeIfPresent(a$Object, c$BiFunction)","9"],["a$Object b$Map#computeIfPresent(a$Object, c$BiFunction)","8"],{"h$ConcurrentMap":["a$Object h$ConcurrentMap#computeIfPresent(a$Object, c$BiFunction)","8"]}],"a$Object b$Map#getOrDefault(a$Object, a$Object)":[["a$Object k$Map#getOrDefault(a$Object, a$Object)","-1"],["a$Object b$Map#getOrDefault(a$Object, a$Object)","9"],["a$Object b$Map#getOrDefault(a$Object, a$Object)","8"],{"h$ConcurrentMap":["a$Object h$ConcurrentMap#getOrDefault(a$Object, a$Object)","8"]}],"a$Object b$Map#merge(a$Object, a$Object, c$BiFunction)":[["a$Object k$Map#merge(a$Object, a$Object, c$BiFunction)","-1"],["a$Object b$Map#merge(a$Object, a$Object, c$BiFunction)","9"],["a$Object b$Map#merge(a$Object, a$Object, c$BiFunction)","8"],{"h$ConcurrentMap":["a$Object h$ConcurrentMap#merge(a$Object, a$Object, c$BiFunction)","8"]}],"a$Object b$Map#putIfAbsent(a$Object, a$Object)":[["a$Object k$Map#putIfAbsent(a$Object, a$Object)","-1"],["a$Object b$Map#putIfAbsent(a$Object, a$Object)","9"],["a$Object b$Map#putIfAbsent(a$Object, a$Object)","8"],{}],"a$Object b$Map#replace(a$Object, a$Object)":[["a$Object k$Map#replace(a$Object, a$Object)","-1"],["a$Object b$Map#replace(a$Object, a$Object)","9"],["a$Object b$Map#replace(a$Object, a$Object)","8"],{}],"boolean b$Map#remove(a$Object, a$Object)":[["boolean k$Map#remove(a$Object, a$Object)","-1"],["boolean b$Map#remove(a$Object, a$Object)","9"],["boolean b$Map#remove(a$Object, a$Object)","8"],{}],"boolean b$Map#replace(a$Object, a$Object, a$Object)":[["boolean k$Map#replace(a$Object, a$Object, a$Object)","-1"],["boolean b$Map#replace(a$Object, a$Object, a$Object)","9"],["boolean b$Map#replace(a$Object, a$Object, a$Object)","8"],{}],"void b$Map#forEach(c$BiConsumer)":[["void k$Map#forEach(c$BiConsumer)","-1"],["void b$Map#forEach(c$BiConsumer)","9"],["void b$Map#forEach(c$BiConsumer)","8"],{"h$ConcurrentMap":["void h$ConcurrentMap#forEach(c$BiConsumer)","8"]}],"void b$Map#replaceAll(c$BiFunction)":[["void k$Map#replaceAll(c$BiFunction)","-1"],["void b$Map#replaceAll(c$BiFunction)","9"],["void b$Map#replaceAll(c$BiFunction)","8"],{"h$ConcurrentMap":["void h$ConcurrentMap#replaceAll(c$BiFunction)","8"]}]}],"b$Map$Entry":["k$Map$Entry",{}],"b$Set":["k$Set",{"b$Spliterator b$Set#spliterator()":[["b$Spliterator k$Set#spliterator()","-1"],["b$Spliterator b$Set#spliterator()","9"],["b$Spliterator b$Set#spliterator()","8"],{"b$LinkedHashSet":["b$Spliterator b$DesugarLinkedHashSet#spliterator(b$LinkedHashSet)","-1"],"b$SortedSet":["b$Spliterator b$SortedSet#spliterator()","8"]}]}],"b$SortedSet":["k$SortedSet",{"b$Spliterator b$SortedSet#spliterator()":[["b$Spliterator k$SortedSet#spliterator()","-1"],["b$Spliterator b$SortedSet#spliterator()","9"],["b$Spliterator b$SortedSet#spliterator()","8"],{}]}],"h$ConcurrentMap":["i$ConcurrentMap",{"a$Object h$ConcurrentMap#compute(a$Object, c$BiFunction)":[["a$Object i$ConcurrentMap#compute(a$Object, c$BiFunction)","-1"],["a$Object h$ConcurrentMap#compute(a$Object, c$BiFunction)","9"],["a$Object h$ConcurrentMap#compute(a$Object, c$BiFunction)","8"],{}],"a$Object h$ConcurrentMap#computeIfAbsent(a$Object, c$Function)":[["a$Object i$ConcurrentMap#computeIfAbsent(a$Object, c$Function)","-1"],["a$Object h$ConcurrentMap#computeIfAbsent(a$Object, c$Function)","9"],["a$Object h$ConcurrentMap#computeIfAbsent(a$Object, c$Function)","8"],{}],"a$Object h$ConcurrentMap#computeIfPresent(a$Object, c$BiFunction)":[["a$Object i$ConcurrentMap#computeIfPresent(a$Object, c$BiFunction)","-1"],["a$Object h$ConcurrentMap#computeIfPresent(a$Object, c$BiFunction)","9"],["a$Object h$ConcurrentMap#computeIfPresent(a$Object, c$BiFunction)","8"],{}],"a$Object h$ConcurrentMap#getOrDefault(a$Object, a$Object)":[["a$Object i$ConcurrentMap#getOrDefault(a$Object, a$Object)","-1"],["a$Object h$ConcurrentMap#getOrDefault(a$Object, a$Object)","9"],["a$Object h$ConcurrentMap#getOrDefault(a$Object, a$Object)","8"],{}],"a$Object h$ConcurrentMap#merge(a$Object, a$Object, c$BiFunction)":[["a$Object i$ConcurrentMap#merge(a$Object, a$Object, c$BiFunction)","-1"],["a$Object h$ConcurrentMap#merge(a$Object, a$Object, c$BiFunction)","9"],["a$Object h$ConcurrentMap#merge(a$Object, a$Object, c$BiFunction)","8"],{}],"void h$ConcurrentMap#forEach(c$BiConsumer)":[["void i$ConcurrentMap#forEach(c$BiConsumer)","-1"],["void h$ConcurrentMap#forEach(c$BiConsumer)","9"],["void h$ConcurrentMap#forEach(c$BiConsumer)","8"],{}],"void h$ConcurrentMap#replaceAll(c$BiFunction)":[["void i$ConcurrentMap#replaceAll(c$BiFunction)","-1"],["void h$ConcurrentMap#replaceAll(c$BiFunction)","9"],["void h$ConcurrentMap#replaceAll(c$BiFunction)","8"],{}]}]},"wrapper":{"b$PrimitiveIterator$OfDouble":[["a$Double b$PrimitiveIterator$OfDouble#next()","a$Object b$PrimitiveIterator$OfDouble#next()","boolean b$Iterator#hasNext()","double b$PrimitiveIterator$OfDouble#nextDouble()","void b$Iterator#remove()","void b$PrimitiveIterator$OfDouble#forEachRemaining(a$Object)","void b$PrimitiveIterator$OfDouble#forEachRemaining(c$Consumer)","void b$PrimitiveIterator$OfDouble#forEachRemaining(c$DoubleConsumer)"],false,[]],"b$PrimitiveIterator$OfInt":[["a$Integer b$PrimitiveIterator$OfInt#next()","a$Object b$PrimitiveIterator$OfInt#next()","boolean b$Iterator#hasNext()","int b$PrimitiveIterator$OfInt#nextInt()","void b$Iterator#remove()","void b$PrimitiveIterator$OfInt#forEachRemaining(a$Object)","void b$PrimitiveIterator$OfInt#forEachRemaining(c$Consumer)","void b$PrimitiveIterator$OfInt#forEachRemaining(c$IntConsumer)"],false,[]],"b$PrimitiveIterator$OfLong":[["a$Long b$PrimitiveIterator$OfLong#next()","a$Object b$PrimitiveIterator$OfLong#next()","boolean b$Iterator#hasNext()","long b$PrimitiveIterator$OfLong#nextLong()","void b$Iterator#remove()","void b$PrimitiveIterator$OfLong#forEachRemaining(a$Object)","void b$PrimitiveIterator$OfLong#forEachRemaining(c$Consumer)","void b$PrimitiveIterator$OfLong#forEachRemaining(c$LongConsumer)"],false,[]],"b$Spliterator$OfDouble":[["b$Comparator b$Spliterator#getComparator()","b$Spliterator b$Spliterator$OfDouble#trySplit()","b$Spliterator$OfDouble b$Spliterator$OfDouble#trySplit()","b$Spliterator$OfPrimitive b$Spliterator$OfDouble#trySplit()","boolean b$Spliterator#hasCharacteristics(int)","boolean b$Spliterator$OfDouble#tryAdvance(a$Object)","boolean b$Spliterator$OfDouble#tryAdvance(c$Consumer)","boolean b$Spliterator$OfDouble#tryAdvance(c$DoubleConsumer)","int b$Spliterator#characteristics()","long b$Spliterator#estimateSize()","long b$Spliterator#getExactSizeIfKnown()","void b$Spliterator$OfDouble#forEachRemaining(a$Object)","void b$Spliterator$OfDouble#forEachRemaining(c$Consumer)","void b$Spliterator$OfDouble#forEachRemaining(c$DoubleConsumer)"],false,[]],"b$Spliterator$OfInt":[["b$Comparator b$Spliterator#getComparator()","b$Spliterator b$Spliterator$OfInt#trySplit()","b$Spliterator$OfInt b$Spliterator$OfInt#trySplit()","b$Spliterator$OfPrimitive b$Spliterator$OfInt#trySplit()","boolean b$Spliterator#hasCharacteristics(int)","boolean b$Spliterator$OfInt#tryAdvance(a$Object)","boolean b$Spliterator$OfInt#tryAdvance(c$Consumer)","boolean b$Spliterator$OfInt#tryAdvance(c$IntConsumer)","int b$Spliterator#characteristics()","long b$Spliterator#estimateSize()","long b$Spliterator#getExactSizeIfKnown()","void b$Spliterator$OfInt#forEachRemaining(a$Object)","void b$Spliterator$OfInt#forEachRemaining(c$Consumer)","void b$Spliterator$OfInt#forEachRemaining(c$IntConsumer)"],false,[]],"b$Spliterator$OfLong":[["b$Comparator b$Spliterator#getComparator()","b$Spliterator b$Spliterator$OfLong#trySplit()","b$Spliterator$OfLong b$Spliterator$OfLong#trySplit()","b$Spliterator$OfPrimitive b$Spliterator$OfLong#trySplit()","boolean b$Spliterator#hasCharacteristics(int)","boolean b$Spliterator$OfLong#tryAdvance(a$Object)","boolean b$Spliterator$OfLong#tryAdvance(c$Consumer)","boolean b$Spliterator$OfLong#tryAdvance(c$LongConsumer)","int b$Spliterator#characteristics()","long b$Spliterator#estimateSize()","long b$Spliterator#getExactSizeIfKnown()","void b$Spliterator$OfLong#forEachRemaining(a$Object)","void b$Spliterator$OfLong#forEachRemaining(c$Consumer)","void b$Spliterator$OfLong#forEachRemaining(c$LongConsumer)"],false,[]],"b$Spliterator$OfPrimitive":[["b$Comparator b$Spliterator#getComparator()","b$Spliterator b$Spliterator$OfPrimitive#trySplit()","b$Spliterator$OfPrimitive b$Spliterator$OfPrimitive#trySplit()","boolean b$Spliterator#hasCharacteristics(int)","boolean b$Spliterator#tryAdvance(c$Consumer)","boolean b$Spliterator$OfPrimitive#tryAdvance(a$Object)","int b$Spliterator#characteristics()","long b$Spliterator#estimateSize()","long b$Spliterator#getExactSizeIfKnown()","void b$Spliterator#forEachRemaining(c$Consumer)","void b$Spliterator$OfPrimitive#forEachRemaining(a$Object)"],false,["b$Spliterator$OfDouble","b$Spliterator$OfInt","b$Spliterator$OfLong"]],"b$Spliterator":[["b$Comparator b$Spliterator#getComparator()","b$Spliterator b$Spliterator#trySplit()","boolean b$Spliterator#hasCharacteristics(int)","boolean b$Spliterator#tryAdvance(c$Consumer)","int b$Spliterator#characteristics()","long b$Spliterator#estimateSize()","long b$Spliterator#getExactSizeIfKnown()","void b$Spliterator#forEachRemaining(c$Consumer)"],false,["b$Spliterator$OfPrimitive"]],"f$Collector$Characteristics":[[],false,[]],"f$Collector":[["b$Set f$Collector#characteristics()","c$BiConsumer f$Collector#accumulator()","c$BinaryOperator f$Collector#combiner()","c$Function f$Collector#finisher()","c$Supplier f$Collector#supplier()"],false,[]],"f$DoubleStream":[["a$Object f$DoubleStream#collect(c$Supplier, c$ObjDoubleConsumer, c$BiConsumer)","b$DoubleSummaryStatistics f$DoubleStream#summaryStatistics()","b$Iterator f$DoubleStream#iterator()","b$OptionalDouble f$DoubleStream#average()","b$OptionalDouble f$DoubleStream#findAny()","b$OptionalDouble f$DoubleStream#findFirst()","b$OptionalDouble f$DoubleStream#max()","b$OptionalDouble f$DoubleStream#min()","b$OptionalDouble f$DoubleStream#reduce(c$DoubleBinaryOperator)","b$PrimitiveIterator$OfDouble f$DoubleStream#iterator()","b$Spliterator f$DoubleStream#spliterator()","b$Spliterator$OfDouble f$DoubleStream#spliterator()","boolean f$BaseStream#isParallel()","boolean f$DoubleStream#allMatch(c$DoublePredicate)","boolean f$DoubleStream#anyMatch(c$DoublePredicate)","boolean f$DoubleStream#noneMatch(c$DoublePredicate)","double f$DoubleStream#reduce(double, c$DoubleBinaryOperator)","double f$DoubleStream#sum()","double[] f$DoubleStream#toArray()","f$BaseStream f$BaseStream#onClose(a$Runnable)","f$BaseStream f$BaseStream#unordered()","f$BaseStream f$DoubleStream#parallel()","f$BaseStream f$DoubleStream#sequential()","f$DoubleStream f$DoubleStream#distinct()","f$DoubleStream f$DoubleStream#dropWhile(c$DoublePredicate)","f$DoubleStream f$DoubleStream#filter(c$DoublePredicate)","f$DoubleStream f$DoubleStream#flatMap(c$DoubleFunction)","f$DoubleStream f$DoubleStream#limit(long)","f$DoubleStream f$DoubleStream#map(c$DoubleUnaryOperator)","f$DoubleStream f$DoubleStream#parallel()","f$DoubleStream f$DoubleStream#peek(c$DoubleConsumer)","f$DoubleStream f$DoubleStream#sequential()","f$DoubleStream f$DoubleStream#skip(long)","f$DoubleStream f$DoubleStream#sorted()","f$DoubleStream f$DoubleStream#takeWhile(c$DoublePredicate)","f$IntStream f$DoubleStream#mapToInt(c$DoubleToIntFunction)","f$LongStream f$DoubleStream#mapToLong(c$DoubleToLongFunction)","f$Stream f$DoubleStream#boxed()","f$Stream f$DoubleStream#mapToObj(c$DoubleFunction)","long f$DoubleStream#count()","void f$BaseStream#close()","void f$DoubleStream#forEach(c$DoubleConsumer)","void f$DoubleStream#forEachOrdered(c$DoubleConsumer)"],false,[]],"f$IntStream":[["a$Object f$IntStream#collect(c$Supplier, c$ObjIntConsumer, c$BiConsumer)","b$IntSummaryStatistics f$IntStream#summaryStatistics()","b$Iterator f$IntStream#iterator()","b$OptionalDouble f$IntStream#average()","b$OptionalInt f$IntStream#findAny()","b$OptionalInt f$IntStream#findFirst()","b$OptionalInt f$IntStream#max()","b$OptionalInt f$IntStream#min()","b$OptionalInt f$IntStream#reduce(c$IntBinaryOperator)","b$PrimitiveIterator$OfInt f$IntStream#iterator()","b$Spliterator f$IntStream#spliterator()","b$Spliterator$OfInt f$IntStream#spliterator()","boolean f$BaseStream#isParallel()","boolean f$IntStream#allMatch(c$IntPredicate)","boolean f$IntStream#anyMatch(c$IntPredicate)","boolean f$IntStream#noneMatch(c$IntPredicate)","f$BaseStream f$BaseStream#onClose(a$Runnable)","f$BaseStream f$BaseStream#unordered()","f$BaseStream f$IntStream#parallel()","f$BaseStream f$IntStream#sequential()","f$DoubleStream f$IntStream#asDoubleStream()","f$DoubleStream f$IntStream#mapToDouble(c$IntToDoubleFunction)","f$IntStream f$IntStream#distinct()","f$IntStream f$IntStream#dropWhile(c$IntPredicate)","f$IntStream f$IntStream#filter(c$IntPredicate)","f$IntStream f$IntStream#flatMap(c$IntFunction)","f$IntStream f$IntStream#limit(long)","f$IntStream f$IntStream#map(c$IntUnaryOperator)","f$IntStream f$IntStream#parallel()","f$IntStream f$IntStream#peek(c$IntConsumer)","f$IntStream f$IntStream#sequential()","f$IntStream f$IntStream#skip(long)","f$IntStream f$IntStream#sorted()","f$IntStream f$IntStream#takeWhile(c$IntPredicate)","f$LongStream f$IntStream#asLongStream()","f$LongStream f$IntStream#mapToLong(c$IntToLongFunction)","f$Stream f$IntStream#boxed()","f$Stream f$IntStream#mapToObj(c$IntFunction)","int f$IntStream#reduce(int, c$IntBinaryOperator)","int f$IntStream#sum()","int[] f$IntStream#toArray()","long f$IntStream#count()","void f$BaseStream#close()","void f$IntStream#forEach(c$IntConsumer)","void f$IntStream#forEachOrdered(c$IntConsumer)"],false,[]],"f$LongStream":[["a$Object f$LongStream#collect(c$Supplier, c$ObjLongConsumer, c$BiConsumer)","b$Iterator f$LongStream#iterator()","b$LongSummaryStatistics f$LongStream#summaryStatistics()","b$OptionalDouble f$LongStream#average()","b$OptionalLong f$LongStream#findAny()","b$OptionalLong f$LongStream#findFirst()","b$OptionalLong f$LongStream#max()","b$OptionalLong f$LongStream#min()","b$OptionalLong f$LongStream#reduce(c$LongBinaryOperator)","b$PrimitiveIterator$OfLong f$LongStream#iterator()","b$Spliterator f$LongStream#spliterator()","b$Spliterator$OfLong f$LongStream#spliterator()","boolean f$BaseStream#isParallel()","boolean f$LongStream#allMatch(c$LongPredicate)","boolean f$LongStream#anyMatch(c$LongPredicate)","boolean f$LongStream#noneMatch(c$LongPredicate)","f$BaseStream f$BaseStream#onClose(a$Runnable)","f$BaseStream f$BaseStream#unordered()","f$BaseStream f$LongStream#parallel()","f$BaseStream f$LongStream#sequential()","f$DoubleStream f$LongStream#asDoubleStream()","f$DoubleStream f$LongStream#mapToDouble(c$LongToDoubleFunction)","f$IntStream f$LongStream#mapToInt(c$LongToIntFunction)","f$LongStream f$LongStream#distinct()","f$LongStream f$LongStream#dropWhile(c$LongPredicate)","f$LongStream f$LongStream#filter(c$LongPredicate)","f$LongStream f$LongStream#flatMap(c$LongFunction)","f$LongStream f$LongStream#limit(long)","f$LongStream f$LongStream#map(c$LongUnaryOperator)","f$LongStream f$LongStream#parallel()","f$LongStream f$LongStream#peek(c$LongConsumer)","f$LongStream f$LongStream#sequential()","f$LongStream f$LongStream#skip(long)","f$LongStream f$LongStream#sorted()","f$LongStream f$LongStream#takeWhile(c$LongPredicate)","f$Stream f$LongStream#boxed()","f$Stream f$LongStream#mapToObj(c$LongFunction)","long f$LongStream#count()","long f$LongStream#reduce(long, c$LongBinaryOperator)","long f$LongStream#sum()","long[] f$LongStream#toArray()","void f$BaseStream#close()","void f$LongStream#forEach(c$LongConsumer)","void f$LongStream#forEachOrdered(c$LongConsumer)"],false,[]],"f$Stream":[["a$Object f$Stream#collect(c$Supplier, c$BiConsumer, c$BiConsumer)","a$Object f$Stream#collect(f$Collector)","a$Object f$Stream#reduce(a$Object, c$BiFunction, c$BinaryOperator)","a$Object f$Stream#reduce(a$Object, c$BinaryOperator)","a$Object[] f$Stream#toArray()","a$Object[] f$Stream#toArray(c$IntFunction)","b$Iterator f$BaseStream#iterator()","b$Optional f$Stream#findAny()","b$Optional f$Stream#findFirst()","b$Optional f$Stream#max(b$Comparator)","b$Optional f$Stream#min(b$Comparator)","b$Optional f$Stream#reduce(c$BinaryOperator)","b$Spliterator f$BaseStream#spliterator()","boolean f$BaseStream#isParallel()","boolean f$Stream#allMatch(c$Predicate)","boolean f$Stream#anyMatch(c$Predicate)","boolean f$Stream#noneMatch(c$Predicate)","f$BaseStream f$BaseStream#onClose(a$Runnable)","f$BaseStream f$BaseStream#parallel()","f$BaseStream f$BaseStream#sequential()","f$BaseStream f$BaseStream#unordered()","f$DoubleStream f$Stream#flatMapToDouble(c$Function)","f$DoubleStream f$Stream#mapToDouble(c$ToDoubleFunction)","f$IntStream f$Stream#flatMapToInt(c$Function)","f$IntStream f$Stream#mapToInt(c$ToIntFunction)","f$LongStream f$Stream#flatMapToLong(c$Function)","f$LongStream f$Stream#mapToLong(c$ToLongFunction)","f$Stream f$Stream#distinct()","f$Stream f$Stream#dropWhile(c$Predicate)","f$Stream f$Stream#filter(c$Predicate)","f$Stream f$Stream#flatMap(c$Function)","f$Stream f$Stream#limit(long)","f$Stream f$Stream#map(c$Function)","f$Stream f$Stream#peek(c$Consumer)","f$Stream f$Stream#skip(long)","f$Stream f$Stream#sorted()","f$Stream f$Stream#sorted(b$Comparator)","f$Stream f$Stream#takeWhile(c$Predicate)","long f$Stream#count()","void f$BaseStream#close()","void f$Stream#forEach(c$Consumer)","void f$Stream#forEachOrdered(c$Consumer)"],false,[]],"f$BaseStream":[["b$Iterator f$BaseStream#iterator()","b$Spliterator f$BaseStream#spliterator()","boolean f$BaseStream#isParallel()","f$BaseStream f$BaseStream#onClose(a$Runnable)","f$BaseStream f$BaseStream#parallel()","f$BaseStream f$BaseStream#sequential()","f$BaseStream f$BaseStream#unordered()","void f$BaseStream#close()"],false,["f$DoubleStream","f$IntStream","f$LongStream","f$Stream"]]},"custom_conversion":{"b$DoubleSummaryStatistics":["b$DoubleSummaryStatistics b$DoubleSummaryStatisticsConversions#convert(k$DoubleSummaryStatistics)","k$DoubleSummaryStatistics b$DoubleSummaryStatisticsConversions#convert(b$DoubleSummaryStatistics)"],"b$IntSummaryStatistics":["b$IntSummaryStatistics b$IntSummaryStatisticsConversions#convert(k$IntSummaryStatistics)","k$IntSummaryStatistics b$IntSummaryStatisticsConversions#convert(b$IntSummaryStatistics)"],"b$LongSummaryStatistics":["b$LongSummaryStatistics b$LongSummaryStatisticsConversions#convert(k$LongSummaryStatistics)","k$LongSummaryStatistics b$LongSummaryStatisticsConversions#convert(b$LongSummaryStatistics)"],"b$Optional":["b$Optional b$OptionalConversions#convert(k$Optional)","k$Optional b$OptionalConversions#convert(b$Optional)"],"b$OptionalDouble":["b$OptionalDouble b$OptionalConversions#convert(k$OptionalDouble)","k$OptionalDouble b$OptionalConversions#convert(b$OptionalDouble)"],"b$OptionalInt":["b$OptionalInt b$OptionalConversions#convert(k$OptionalInt)","k$OptionalInt b$OptionalConversions#convert(b$OptionalInt)"],"b$OptionalLong":["b$OptionalLong b$OptionalConversions#convert(k$OptionalLong)","k$OptionalLong b$OptionalConversions#convert(b$OptionalLong)"]}},{"api_level_below_or_equal":18,"rewrite_type":{"y$StandardCharsets":"z$StandardCharsets"}}],"program_flags":[{"api_level_below_or_equal":36,"amend_library_method":["public static f$IntStream f$IntStream#iterate(int, c$IntPredicate, c$IntUnaryOperator)","public static f$Stream f$Stream#iterate(a$Object, c$Predicate, c$UnaryOperator)","public static f$DoubleStream f$DoubleStream#iterate(double, c$DoublePredicate, c$DoubleUnaryOperator)","public static f$LongStream f$LongStream#iterate(long, c$LongPredicate, c$LongUnaryOperator)"]},{"api_level_below_or_equal":32,"api_level_greater_or_equal":26,"covariant_retarget":{"q$IsoEra d$LocalDate#getEra()":"q$Era d$LocalDate#getEra()"},"amend_library_method":["public q$IsoEra d$LocalDate#getEra()"]},{"api_level_below_or_equal":25,"static_retarget":{"b$Date b$Date#from(d$Instant)":"b$Date b$DesugarDate#from(d$Instant)","b$GregorianCalendar b$GregorianCalendar#from(d$ZonedDateTime)":"b$GregorianCalendar b$DesugarGregorianCalendar#from(d$ZonedDateTime)","b$TimeZone b$TimeZone#getTimeZone(a$String)":"b$TimeZone b$DesugarTimeZone#getTimeZone(a$String)"},"non_emulated_virtual_retarget":{"d$Instant b$Calendar#toInstant()":"d$Instant b$DesugarCalendar#toInstant(b$Calendar)"}},{"api_level_below_or_equal":23,"static_retarget":{"b$Collection b$Collections#checkedCollection(b$Collection, a$Class)":"b$Collection b$DesugarCollections#checkedCollection(b$Collection, a$Class)","b$Collection b$Collections#synchronizedCollection(b$Collection)":"b$Collection b$DesugarCollections#synchronizedCollection(b$Collection)","b$Collection b$Collections#unmodifiableCollection(b$Collection)":"b$Collection b$DesugarCollections#unmodifiableCollection(b$Collection)","b$List b$Collections#checkedList(b$List, a$Class)":"b$List b$DesugarCollections#checkedList(b$List, a$Class)","b$List b$Collections#synchronizedList(b$List)":"b$List b$DesugarCollections#synchronizedList(b$List)","b$List b$Collections#unmodifiableList(b$List)":"b$List b$DesugarCollections#unmodifiableList(b$List)","b$Map b$Collections#checkedMap(b$Map, a$Class, a$Class)":"b$Map b$DesugarCollections#checkedMap(b$Map, a$Class, a$Class)","b$Map b$Collections#synchronizedMap(b$Map)":"b$Map b$DesugarCollections#synchronizedMap(b$Map)","b$Map b$Collections#unmodifiableMap(b$Map)":"b$Map b$DesugarCollections#unmodifiableMap(b$Map)","b$Set b$Collections#checkedSet(b$Set, a$Class)":"b$Set b$DesugarCollections#checkedSet(b$Set, a$Class)","b$Set b$Collections#synchronizedSet(b$Set)":"b$Set b$DesugarCollections#synchronizedSet(b$Set)","b$Set b$Collections#unmodifiableSet(b$Set)":"b$Set b$DesugarCollections#unmodifiableSet(b$Set)","b$SortedMap b$Collections#checkedSortedMap(b$SortedMap, a$Class, a$Class)":"b$SortedMap b$DesugarCollections#checkedSortedMap(b$SortedMap, a$Class, a$Class)","b$SortedMap b$Collections#synchronizedSortedMap(b$SortedMap)":"b$SortedMap b$DesugarCollections#synchronizedSortedMap(b$SortedMap)","b$SortedMap b$Collections#unmodifiableSortedMap(b$SortedMap)":"b$SortedMap b$DesugarCollections#unmodifiableSortedMap(b$SortedMap)","b$SortedSet b$Collections#checkedSortedSet(b$SortedSet, a$Class)":"b$SortedSet b$DesugarCollections#checkedSortedSet(b$SortedSet, a$Class)","b$SortedSet b$Collections#synchronizedSortedSet(b$SortedSet)":"b$SortedSet b$DesugarCollections#synchronizedSortedSet(b$SortedSet)","b$SortedSet b$Collections#unmodifiableSortedSet(b$SortedSet)":"b$SortedSet b$DesugarCollections#unmodifiableSortedSet(b$SortedSet)"},"non_emulated_virtual_retarget":{"a$Object u$AtomicReference#accumulateAndGet(a$Object, c$BinaryOperator)":"a$Object u$DesugarAtomicReference#accumulateAndGet(u$AtomicReference, a$Object, c$BinaryOperator)","a$Object u$AtomicReference#getAndAccumulate(a$Object, c$BinaryOperator)":"a$Object u$DesugarAtomicReference#getAndAccumulate(u$AtomicReference, a$Object, c$BinaryOperator)","a$Object u$AtomicReference#getAndUpdate(c$UnaryOperator)":"a$Object u$DesugarAtomicReference#getAndUpdate(u$AtomicReference, c$UnaryOperator)","a$Object u$AtomicReference#updateAndGet(c$UnaryOperator)":"a$Object u$DesugarAtomicReference#updateAndGet(u$AtomicReference, c$UnaryOperator)","int u$AtomicInteger#accumulateAndGet(int, c$IntBinaryOperator)":"int u$DesugarAtomicInteger#accumulateAndGet(u$AtomicInteger, int, c$IntBinaryOperator)","int u$AtomicInteger#getAndAccumulate(int, c$IntBinaryOperator)":"int u$DesugarAtomicInteger#getAndAccumulate(u$AtomicInteger, int, c$IntBinaryOperator)","int u$AtomicInteger#getAndUpdate(c$IntUnaryOperator)":"int u$DesugarAtomicInteger#getAndUpdate(u$AtomicInteger, c$IntUnaryOperator)","int u$AtomicInteger#updateAndGet(c$IntUnaryOperator)":"int u$DesugarAtomicInteger#updateAndGet(u$AtomicInteger, c$IntUnaryOperator)","long u$AtomicLong#accumulateAndGet(long, c$LongBinaryOperator)":"long u$DesugarAtomicLong#accumulateAndGet(u$AtomicLong, long, c$LongBinaryOperator)","long u$AtomicLong#getAndAccumulate(long, c$LongBinaryOperator)":"long u$DesugarAtomicLong#getAndAccumulate(u$AtomicLong, long, c$LongBinaryOperator)","long u$AtomicLong#getAndUpdate(c$LongUnaryOperator)":"long u$DesugarAtomicLong#getAndUpdate(u$AtomicLong, c$LongUnaryOperator)","long u$AtomicLong#updateAndGet(c$LongUnaryOperator)":"long u$DesugarAtomicLong#updateAndGet(u$AtomicLong, c$LongUnaryOperator)"},"api_generic_types_conversion":{"b$Collection b$Hashtable#values()":["b$Collection b$DesugarCollections#bridge_synchronizedCollection(b$Collection, a$Object)"],"b$List b$Vector#subList(int, int)":["","","b$List b$DesugarCollections#bridge_synchronizedList(b$List, a$Object)"],"b$Set b$Hashtable#entrySet()":["b$Set b$DesugarCollections#bridge_synchronizedSet(b$Set, a$Object)"],"b$Set b$Hashtable#keySet()":["b$Set b$DesugarCollections#bridge_synchronizedSet(b$Set, a$Object)"]}}],"library_flags":[{"api_level_below_or_equal":30,"rewrite_type":{"A$GetBooleanAction":"B$GetBooleanAction","A$GetIntegerAction":"B$GetIntegerAction","A$GetLongAction":"B$GetLongAction","A$GetPropertyAction":"B$GetPropertyAction","A$GetPropertyAction$1":"B$GetPropertyAction$1","A$OpenFileInputStreamAction":"B$OpenFileInputStreamAction","A$PutAllAction":"B$PutAllAction","C$DesugarUnsafe":"D$DesugarUnsafe","E$Preconditions":"F$Preconditions","E$Preconditions$1":"F$Preconditions$1","E$StaticProperty":"F$StaticProperty","G$Unsafe":"D$DesugarUnsafe"},"legacy_backport":{"a$DesugarDouble":"a$Double","a$DesugarInteger":"a$Integer","a$DesugarLong":"a$Long","a$DesugarMath":"a$Math"}},{"api_level_below_or_equal":25,"rewrite_type":{"H$ArrayDecoder":"I$ArrayDecoder","H$ArrayEncoder":"I$ArrayEncoder","H$Big5":"I$Big5","H$Big5_HKSCS":"I$Big5_HKSCS","H$Big5_HKSCS$Decoder":"I$Big5_HKSCS$Decoder","H$Big5_HKSCS$Encoder":"I$Big5_HKSCS$Encoder","H$Big5_Solaris":"I$Big5_Solaris","H$CESU_8":"I$CESU_8","H$CESU_8$Decoder":"I$CESU_8$Decoder","H$CESU_8$Encoder":"I$CESU_8$Encoder","H$CharsetMapping":"I$CharsetMapping","H$CharsetMapping$1":"I$CharsetMapping$1","H$CharsetMapping$2":"I$CharsetMapping$2","H$CharsetMapping$3":"I$CharsetMapping$3","H$CharsetMapping$4":"I$CharsetMapping$4","H$CharsetMapping$Entry":"I$CharsetMapping$Entry","H$DelegatableDecoder":"I$DelegatableDecoder","H$DoubleByte":"I$DoubleByte","H$DoubleByte$Decoder":"I$DoubleByte$Decoder","H$DoubleByte$Decoder_DBCSONLY":"I$DoubleByte$Decoder_DBCSONLY","H$DoubleByte$Decoder_EBCDIC":"I$DoubleByte$Decoder_EBCDIC","H$DoubleByte$Decoder_EUC_SIM":"I$DoubleByte$Decoder_EUC_SIM","H$DoubleByte$Encoder":"I$DoubleByte$Encoder","H$DoubleByte$Encoder_DBCSONLY":"I$DoubleByte$Encoder_DBCSONLY","H$DoubleByte$Encoder_EBCDIC":"I$DoubleByte$Encoder_EBCDIC","H$DoubleByte$Encoder_EUC_SIM":"I$DoubleByte$Encoder_EUC_SIM","H$EUC_CN":"I$EUC_CN","H$EUC_JP":"I$EUC_JP","H$EUC_JP$Decoder":"I$EUC_JP$Decoder","H$EUC_JP$Encoder":"I$EUC_JP$Encoder","H$EUC_JP_LINUX":"I$EUC_JP_LINUX","H$EUC_JP_LINUX$Decoder":"I$EUC_JP_LINUX$Decoder","H$EUC_JP_LINUX$Encoder":"I$EUC_JP_LINUX$Encoder","H$EUC_JP_Open":"I$EUC_JP_Open","H$EUC_JP_Open$Decoder":"I$EUC_JP_Open$Decoder","H$EUC_JP_Open$Encoder":"I$EUC_JP_Open$Encoder","H$EUC_KR":"I$EUC_KR","H$EUC_TW":"I$EUC_TW","H$EUC_TW$Decoder":"I$EUC_TW$Decoder","H$EUC_TW$Encoder":"I$EUC_TW$Encoder","H$EUC_TWMapping":"I$EUC_TWMapping","H$GB18030":"I$GB18030","H$GB18030$Decoder":"I$GB18030$Decoder","H$GB18030$Encoder":"I$GB18030$Encoder","H$GBK":"I$GBK","H$HKSCS":"I$HKSCS","H$HKSCS$Decoder":"I$HKSCS$Decoder","H$HKSCS$Encoder":"I$HKSCS$Encoder","H$HKSCSMapping":"I$HKSCSMapping","H$HistoricallyNamedCharset":"I$HistoricallyNamedCharset","H$IBM437":"I$IBM437","H$IBM737":"I$IBM737","H$IBM775":"I$IBM775","H$IBM850":"I$IBM850","H$IBM852":"I$IBM852","H$IBM855":"I$IBM855","H$IBM857":"I$IBM857","H$IBM858":"I$IBM858","H$IBM862":"I$IBM862","H$IBM866":"I$IBM866","H$IBM874":"I$IBM874","H$ISO_8859_1":"I$ISO_8859_1","H$ISO_8859_1$Decoder":"I$ISO_8859_1$Decoder","H$ISO_8859_1$Encoder":"I$ISO_8859_1$Encoder","H$ISO_8859_11":"I$ISO_8859_11","H$ISO_8859_13":"I$ISO_8859_13","H$ISO_8859_15":"I$ISO_8859_15","H$ISO_8859_16":"I$ISO_8859_16","H$ISO_8859_2":"I$ISO_8859_2","H$ISO_8859_3":"I$ISO_8859_3","H$ISO_8859_4":"I$ISO_8859_4","H$ISO_8859_5":"I$ISO_8859_5","H$ISO_8859_6":"I$ISO_8859_6","H$ISO_8859_7":"I$ISO_8859_7","H$ISO_8859_8":"I$ISO_8859_8","H$ISO_8859_9":"I$ISO_8859_9","H$JIS_X_0201":"I$JIS_X_0201","H$JIS_X_0208":"I$JIS_X_0208","H$JIS_X_0208_Solaris":"I$JIS_X_0208_Solaris","H$JIS_X_0212":"I$JIS_X_0212","H$JIS_X_0212_Solaris":"I$JIS_X_0212_Solaris","H$Johab":"I$Johab","H$KOI8_R":"I$KOI8_R","H$KOI8_U":"I$KOI8_U","H$MS1250":"I$MS1250","H$MS1251":"I$MS1251","H$MS1252":"I$MS1252","H$MS1253":"I$MS1253","H$MS1254":"I$MS1254","H$MS1257":"I$MS1257","H$MS932":"I$MS932","H$PCK":"I$PCK","H$SJIS":"I$SJIS","H$SingleByte":"I$SingleByte","H$SingleByte$Decoder":"I$SingleByte$Decoder","H$SingleByte$Encoder":"I$SingleByte$Encoder","H$StandardCharsets":"I$StandardCharsets","H$StandardCharsets$1":"I$StandardCharsets$1","H$StandardCharsets$Aliases":"I$StandardCharsets$Aliases","H$StandardCharsets$Cache":"I$StandardCharsets$Cache","H$StandardCharsets$Classes":"I$StandardCharsets$Classes","H$StreamDecoder":"I$StreamDecoder","H$StreamEncoder":"I$StreamEncoder","H$StringUTF16":"I$StringUTF16","H$Surrogate":"I$Surrogate","H$Surrogate$Generator":"I$Surrogate$Generator","H$Surrogate$Parser":"I$Surrogate$Parser","H$TIS_620":"I$TIS_620","H$ThreadLocalCoders":"I$ThreadLocalCoders","H$ThreadLocalCoders$1":"I$ThreadLocalCoders$1","H$ThreadLocalCoders$2":"I$ThreadLocalCoders$2","H$ThreadLocalCoders$Cache":"I$ThreadLocalCoders$Cache","H$US_ASCII":"I$US_ASCII","H$US_ASCII$Decoder":"I$US_ASCII$Decoder","H$US_ASCII$Encoder":"I$US_ASCII$Encoder","H$UTF_16":"I$UTF_16","H$UTF_16$Decoder":"I$UTF_16$Decoder","H$UTF_16$Encoder":"I$UTF_16$Encoder","H$UTF_16BE":"I$UTF_16BE","H$UTF_16BE$Decoder":"I$UTF_16BE$Decoder","H$UTF_16BE$Encoder":"I$UTF_16BE$Encoder","H$UTF_16LE":"I$UTF_16LE","H$UTF_16LE$Decoder":"I$UTF_16LE$Decoder","H$UTF_16LE$Encoder":"I$UTF_16LE$Encoder","H$UTF_16LE_BOM":"I$UTF_16LE_BOM","H$UTF_16LE_BOM$Decoder":"I$UTF_16LE_BOM$Decoder","H$UTF_16LE_BOM$Encoder":"I$UTF_16LE_BOM$Encoder","H$UTF_32":"I$UTF_32","H$UTF_32BE":"I$UTF_32BE","H$UTF_32BE_BOM":"I$UTF_32BE_BOM","H$UTF_32Coder":"I$UTF_32Coder","H$UTF_32Coder$Decoder":"I$UTF_32Coder$Decoder","H$UTF_32Coder$Encoder":"I$UTF_32Coder$Encoder","H$UTF_32LE":"I$UTF_32LE","H$UTF_32LE_BOM":"I$UTF_32LE_BOM","H$UTF_8":"I$UTF_8","H$UTF_8$Decoder":"I$UTF_8$Decoder","H$UTF_8$Encoder":"I$UTF_8$Encoder","H$Unicode":"I$Unicode","H$UnicodeDecoder":"I$UnicodeDecoder","H$UnicodeEncoder":"I$UnicodeEncoder","J$PreHashedMap":"K$PreHashedMap","J$PreHashedMap$1":"K$PreHashedMap$1","J$PreHashedMap$1$1":"K$PreHashedMap$1$1","J$PreHashedMap$2":"K$PreHashedMap$2","J$PreHashedMap$2$1":"K$PreHashedMap$2$1","J$PreHashedMap$2$1$1":"K$PreHashedMap$2$1$1","e$Clock":"d$Clock","e$Clock$FixedClock":"d$Clock$FixedClock","e$Clock$OffsetClock":"d$Clock$OffsetClock","e$Clock$SystemClock":"d$Clock$SystemClock","e$Clock$TickClock":"d$Clock$TickClock","e$DateTimeException":"d$DateTimeException","e$DayOfWeek":"d$DayOfWeek","e$DesugarClock":"d$DesugarClock","e$DesugarClock$DesugarTickClock":"d$DesugarClock$DesugarTickClock","e$DesugarDuration":"d$DesugarDuration","e$DesugarLocalDate":"d$DesugarLocalDate","e$DesugarLocalTime":"d$DesugarLocalTime","e$DesugarOffsetTime":"d$DesugarOffsetTime","e$Duration":"d$Duration","e$Duration$1":"d$Duration$1","e$Duration$DurationUnits":"d$Duration$DurationUnits","e$Duration$Lazy":"d$Duration$Lazy","e$Instant":"d$Instant","e$Instant$1":"d$Instant$1","e$LocalDate":"d$LocalDate","e$LocalDate$1":"d$LocalDate$1","e$LocalDateTime":"d$LocalDateTime","e$LocalDateTime$1":"d$LocalDateTime$1","e$LocalTime":"d$LocalTime","e$LocalTime$1":"d$LocalTime$1","e$Month":"d$Month","e$Month$1":"d$Month$1","e$MonthDay":"d$MonthDay","e$MonthDay$1":"d$MonthDay$1","e$OffsetDateTime":"d$OffsetDateTime","e$OffsetDateTime$1":"d$OffsetDateTime$1","e$OffsetTime":"d$OffsetTime","e$OffsetTime$1":"d$OffsetTime$1","e$Period":"d$Period","e$Ser":"d$Ser","e$TimeConversions":"d$TimeConversions","e$Year":"d$Year","e$Year$1":"d$Year$1","e$YearMonth":"d$YearMonth","e$YearMonth$1":"d$YearMonth$1","e$ZoneId":"d$ZoneId","e$ZoneId$1":"d$ZoneId$1","e$ZoneOffset":"d$ZoneOffset","e$ZoneRegion":"d$ZoneRegion","e$ZonedDateTime":"d$ZonedDateTime","e$ZonedDateTime$1":"d$ZonedDateTime$1","l$ChronoField":"j$ChronoField","l$ChronoUnit":"j$ChronoUnit","l$IsoFields":"j$IsoFields","l$IsoFields$1":"j$IsoFields$1","l$IsoFields$Field":"j$IsoFields$Field","l$IsoFields$Field$1":"j$IsoFields$Field$1","l$IsoFields$Field$2":"j$IsoFields$Field$2","l$IsoFields$Field$3":"j$IsoFields$Field$3","l$IsoFields$Field$4":"j$IsoFields$Field$4","l$IsoFields$Unit":"j$IsoFields$Unit","l$JulianFields":"j$JulianFields","l$JulianFields$Field":"j$JulianFields$Field","l$Temporal":"j$Temporal","l$TemporalAccessor":"j$TemporalAccessor","l$TemporalAdjuster":"j$TemporalAdjuster","l$TemporalAdjusters":"j$TemporalAdjusters","l$TemporalAmount":"j$TemporalAmount","l$TemporalField":"j$TemporalField","l$TemporalQueries":"j$TemporalQueries","l$TemporalQueries$1":"j$TemporalQueries$1","l$TemporalQueries$2":"j$TemporalQueries$2","l$TemporalQueries$3":"j$TemporalQueries$3","l$TemporalQueries$4":"j$TemporalQueries$4","l$TemporalQueries$5":"j$TemporalQueries$5","l$TemporalQueries$6":"j$TemporalQueries$6","l$TemporalQueries$7":"j$TemporalQueries$7","l$TemporalQuery":"j$TemporalQuery","l$TemporalUnit":"j$TemporalUnit","l$UnsupportedTemporalTypeException":"j$UnsupportedTemporalTypeException","l$ValueRange":"j$ValueRange","l$WeekFields":"j$WeekFields","l$WeekFields$ComputedDayOfField":"j$WeekFields$ComputedDayOfField","n$DateTimeFormatter":"m$DateTimeFormatter","n$DateTimeFormatter$ClassicFormat":"m$DateTimeFormatter$ClassicFormat","n$DateTimeFormatterBuilder":"m$DateTimeFormatterBuilder","n$DateTimeFormatterBuilder$1":"m$DateTimeFormatterBuilder$1","n$DateTimeFormatterBuilder$2":"m$DateTimeFormatterBuilder$2","n$DateTimeFormatterBuilder$3":"m$DateTimeFormatterBuilder$3","n$DateTimeFormatterBuilder$CharLiteralPrinterParser":"m$DateTimeFormatterBuilder$CharLiteralPrinterParser","n$DateTimeFormatterBuilder$ChronoPrinterParser":"m$DateTimeFormatterBuilder$ChronoPrinterParser","n$DateTimeFormatterBuilder$CompositePrinterParser":"m$DateTimeFormatterBuilder$CompositePrinterParser","n$DateTimeFormatterBuilder$DateTimePrinterParser":"m$DateTimeFormatterBuilder$DateTimePrinterParser","n$DateTimeFormatterBuilder$DefaultValueParser":"m$DateTimeFormatterBuilder$DefaultValueParser","n$DateTimeFormatterBuilder$FractionPrinterParser":"m$DateTimeFormatterBuilder$FractionPrinterParser","n$DateTimeFormatterBuilder$InstantPrinterParser":"m$DateTimeFormatterBuilder$InstantPrinterParser","n$DateTimeFormatterBuilder$LocalizedOffsetIdPrinterParser":"m$DateTimeFormatterBuilder$LocalizedOffsetIdPrinterParser","n$DateTimeFormatterBuilder$LocalizedPrinterParser":"m$DateTimeFormatterBuilder$LocalizedPrinterParser","n$DateTimeFormatterBuilder$NumberPrinterParser":"m$DateTimeFormatterBuilder$NumberPrinterParser","n$DateTimeFormatterBuilder$OffsetIdPrinterParser":"m$DateTimeFormatterBuilder$OffsetIdPrinterParser","n$DateTimeFormatterBuilder$PadPrinterParserDecorator":"m$DateTimeFormatterBuilder$PadPrinterParserDecorator","n$DateTimeFormatterBuilder$PrefixTree":"m$DateTimeFormatterBuilder$PrefixTree","n$DateTimeFormatterBuilder$PrefixTree$CI":"m$DateTimeFormatterBuilder$PrefixTree$CI","n$DateTimeFormatterBuilder$PrefixTree$LENIENT":"m$DateTimeFormatterBuilder$PrefixTree$LENIENT","n$DateTimeFormatterBuilder$ReducedPrinterParser":"m$DateTimeFormatterBuilder$ReducedPrinterParser","n$DateTimeFormatterBuilder$SettingsParser":"m$DateTimeFormatterBuilder$SettingsParser","n$DateTimeFormatterBuilder$StringLiteralPrinterParser":"m$DateTimeFormatterBuilder$StringLiteralPrinterParser","n$DateTimeFormatterBuilder$TextPrinterParser":"m$DateTimeFormatterBuilder$TextPrinterParser","n$DateTimeFormatterBuilder$WeekBasedFieldPrinterParser":"m$DateTimeFormatterBuilder$WeekBasedFieldPrinterParser","n$DateTimeFormatterBuilder$ZoneIdPrinterParser":"m$DateTimeFormatterBuilder$ZoneIdPrinterParser","n$DateTimeFormatterBuilder$ZoneTextPrinterParser":"m$DateTimeFormatterBuilder$ZoneTextPrinterParser","n$DateTimeFormatterBuilderHelper":"m$DateTimeFormatterBuilderHelper","n$DateTimeParseContext":"m$DateTimeParseContext","n$DateTimeParseException":"m$DateTimeParseException","n$DateTimePrintContext":"m$DateTimePrintContext","n$DateTimePrintContext$1":"m$DateTimePrintContext$1","n$DateTimeTextProvider":"m$DateTimeTextProvider","n$DateTimeTextProvider$1":"m$DateTimeTextProvider$1","n$DateTimeTextProvider$LocaleStore":"m$DateTimeTextProvider$LocaleStore","n$DecimalStyle":"m$DecimalStyle","n$DesugarDateTimeTextProviderHelper":"m$DesugarDateTimeTextProviderHelper","n$FormatStyle":"m$FormatStyle","n$Parsed":"m$Parsed","n$ResolverStyle":"m$ResolverStyle","n$SignStyle":"m$SignStyle","n$TextStyle":"m$TextStyle","n$ZoneName":"m$ZoneName","p$Ser":"o$Ser","p$TzdbZoneRulesProvider":"o$TzdbZoneRulesProvider","p$ZoneOffsetTransition":"o$ZoneOffsetTransition","p$ZoneOffsetTransitionRule":"o$ZoneOffsetTransitionRule","p$ZoneOffsetTransitionRule$1":"o$ZoneOffsetTransitionRule$1","p$ZoneOffsetTransitionRule$TimeDefinition":"o$ZoneOffsetTransitionRule$TimeDefinition","p$ZoneRules":"o$ZoneRules","p$ZoneRulesException":"o$ZoneRulesException","p$ZoneRulesProvider":"o$ZoneRulesProvider","p$ZoneRulesProvider$1":"o$ZoneRulesProvider$1","p$ZoneRulesProvider$TimeZoneRulesProvider":"o$ZoneRulesProvider$TimeZoneRulesProvider","r$AbstractChronology":"q$AbstractChronology","r$ChronoLocalDate":"q$ChronoLocalDate","r$ChronoLocalDateImpl":"q$ChronoLocalDateImpl","r$ChronoLocalDateImpl$1":"q$ChronoLocalDateImpl$1","r$ChronoLocalDateTime":"q$ChronoLocalDateTime","r$ChronoLocalDateTimeImpl":"q$ChronoLocalDateTimeImpl","r$ChronoLocalDateTimeImpl$1":"q$ChronoLocalDateTimeImpl$1","r$ChronoPeriod":"q$ChronoPeriod","r$ChronoPeriodImpl":"q$ChronoPeriodImpl","r$ChronoZonedDateTime":"q$ChronoZonedDateTime","r$ChronoZonedDateTime$1":"q$ChronoZonedDateTime$1","r$ChronoZonedDateTimeImpl":"q$ChronoZonedDateTimeImpl","r$ChronoZonedDateTimeImpl$1":"q$ChronoZonedDateTimeImpl$1","r$Chronology":"q$Chronology","r$Chronology$1":"q$Chronology$1","r$DesugarIsoChronology":"q$DesugarIsoChronology","r$Era":"q$Era","r$HijrahChronology":"q$HijrahChronology","r$HijrahChronology$1":"q$HijrahChronology$1","r$HijrahDate":"q$HijrahDate","r$HijrahDate$1":"q$HijrahDate$1","r$HijrahEra":"q$HijrahEra","r$IsoChronology":"q$IsoChronology","r$IsoEra":"q$IsoEra","r$JapaneseChronology":"q$JapaneseChronology","r$JapaneseChronology$1":"q$JapaneseChronology$1","r$JapaneseDate":"q$JapaneseDate","r$JapaneseDate$1":"q$JapaneseDate$1","r$JapaneseEra":"q$JapaneseEra","r$MinguoChronology":"q$MinguoChronology","r$MinguoChronology$1":"q$MinguoChronology$1","r$MinguoDate":"q$MinguoDate","r$MinguoDate$1":"q$MinguoDate$1","r$MinguoEra":"q$MinguoEra","r$Ser":"q$Ser","r$ThaiBuddhistChronology":"q$ThaiBuddhistChronology","r$ThaiBuddhistChronology$1":"q$ThaiBuddhistChronology$1","r$ThaiBuddhistDate":"q$ThaiBuddhistDate","r$ThaiBuddhistDate$1":"q$ThaiBuddhistDate$1","r$ThaiBuddhistEra":"q$ThaiBuddhistEra"},"static_retarget":{"boolean b$Arrays#deepEquals0(a$Object, a$Object)":"boolean b$DesugarArrays#deepEquals0(a$Object, a$Object)"},"amend_library_method":["private static boolean b$Arrays#deepEquals0(a$Object, a$Object)"]},{"api_level_below_or_equal":23,"rewrite_type":{"b$AbstractList":"k$AbstractList","b$AbstractList$Itr":"k$AbstractList$Itr","b$AbstractList$ListItr":"k$AbstractList$ListItr","b$AbstractList$RandomAccessSpliterator":"k$AbstractList$RandomAccessSpliterator","b$AbstractList$RandomAccessSubList":"k$AbstractList$RandomAccessSubList","b$AbstractList$SubList":"k$AbstractList$SubList","b$AbstractList$SubList$1":"k$AbstractList$SubList$1","b$CollSer":"k$CollSer","b$Comparators":"k$Comparators","b$Comparators$NaturalOrderComparator":"k$Comparators$NaturalOrderComparator","b$Comparators$NullComparator":"k$Comparators$NullComparator","b$ConversionRuntimeException":"k$ConversionRuntimeException","b$ImmutableCollections":"k$ImmutableCollections","b$ImmutableCollections$AbstractImmutableCollection":"k$ImmutableCollections$AbstractImmutableCollection","b$ImmutableCollections$AbstractImmutableList":"k$ImmutableCollections$AbstractImmutableList","b$ImmutableCollections$AbstractImmutableMap":"k$ImmutableCollections$AbstractImmutableMap","b$ImmutableCollections$AbstractImmutableSet":"k$ImmutableCollections$AbstractImmutableSet","b$ImmutableCollections$List12":"k$ImmutableCollections$List12","b$ImmutableCollections$ListItr":"k$ImmutableCollections$ListItr","b$ImmutableCollections$ListN":"k$ImmutableCollections$ListN","b$ImmutableCollections$Map1":"k$ImmutableCollections$Map1","b$ImmutableCollections$MapN":"k$ImmutableCollections$MapN","b$ImmutableCollections$MapN$1":"k$ImmutableCollections$MapN$1","b$ImmutableCollections$MapN$MapNIterator":"k$ImmutableCollections$MapN$MapNIterator","b$ImmutableCollections$Set12":"k$ImmutableCollections$Set12","b$ImmutableCollections$Set12$1":"k$ImmutableCollections$Set12$1","b$ImmutableCollections$SetN":"k$ImmutableCollections$SetN","b$ImmutableCollections$SetN$SetNIterator":"k$ImmutableCollections$SetN$SetNIterator","b$ImmutableCollections$SubList":"k$ImmutableCollections$SubList","b$KeyValueHolder":"k$KeyValueHolder","b$SortedSet$1":"k$SortedSet$1","b$Tripwire":"k$Tripwire","g$Collector":"f$Collector","g$Collector$Characteristics":"f$Collector$Characteristics","g$Collectors":"f$Collectors","g$Collectors$1OptionalBox":"f$Collectors$1OptionalBox","g$Collectors$CollectorImpl":"f$Collectors$CollectorImpl","g$Collectors$Partition":"f$Collectors$Partition","g$Collectors$Partition$1":"f$Collectors$Partition$1","g$DoubleStream":"f$DoubleStream","g$DoubleStream$1":"f$DoubleStream$1","g$DoubleStream$2":"f$DoubleStream$2","g$DoubleStream$Builder":"f$DoubleStream$Builder","g$IntStream":"f$IntStream","g$IntStream$1":"f$IntStream$1","g$IntStream$2":"f$IntStream$2","g$IntStream$Builder":"f$IntStream$Builder","g$LongStream":"f$LongStream","g$LongStream$1":"f$LongStream$1","g$LongStream$2":"f$LongStream$2","g$LongStream$Builder":"f$LongStream$Builder","g$Stream":"f$Stream","g$Stream$1":"f$Stream$1","g$Stream$2":"f$Stream$2","g$Stream$Builder":"f$Stream$Builder","g$StreamApiFlips":"f$StreamApiFlips","g$StreamOpFlag":"f$StreamOpFlag","g$StreamOpFlag$MaskBuilder":"f$StreamOpFlag$MaskBuilder","g$StreamOpFlag$Type":"f$StreamOpFlag$Type","g$StreamShape":"f$StreamShape","g$StreamSpliterators":"f$StreamSpliterators","g$StreamSpliterators$AbstractWrappingSpliterator":"f$StreamSpliterators$AbstractWrappingSpliterator","g$StreamSpliterators$ArrayBuffer":"f$StreamSpliterators$ArrayBuffer","g$StreamSpliterators$ArrayBuffer$OfDouble":"f$StreamSpliterators$ArrayBuffer$OfDouble","g$StreamSpliterators$ArrayBuffer$OfInt":"f$StreamSpliterators$ArrayBuffer$OfInt","g$StreamSpliterators$ArrayBuffer$OfLong":"f$StreamSpliterators$ArrayBuffer$OfLong","g$StreamSpliterators$ArrayBuffer$OfPrimitive":"f$StreamSpliterators$ArrayBuffer$OfPrimitive","g$StreamSpliterators$ArrayBuffer$OfRef":"f$StreamSpliterators$ArrayBuffer$OfRef","g$StreamSpliterators$DelegatingSpliterator":"f$StreamSpliterators$DelegatingSpliterator","g$StreamSpliterators$DelegatingSpliterator$OfDouble":"f$StreamSpliterators$DelegatingSpliterator$OfDouble","g$StreamSpliterators$DelegatingSpliterator$OfInt":"f$StreamSpliterators$DelegatingSpliterator$OfInt","g$StreamSpliterators$DelegatingSpliterator$OfLong":"f$StreamSpliterators$DelegatingSpliterator$OfLong","g$StreamSpliterators$DelegatingSpliterator$OfPrimitive":"f$StreamSpliterators$DelegatingSpliterator$OfPrimitive","g$StreamSpliterators$DistinctSpliterator":"f$StreamSpliterators$DistinctSpliterator","g$StreamSpliterators$DoubleWrappingSpliterator":"f$StreamSpliterators$DoubleWrappingSpliterator","g$StreamSpliterators$InfiniteSupplyingSpliterator":"f$StreamSpliterators$InfiniteSupplyingSpliterator","g$StreamSpliterators$InfiniteSupplyingSpliterator$OfDouble":"f$StreamSpliterators$InfiniteSupplyingSpliterator$OfDouble","g$StreamSpliterators$InfiniteSupplyingSpliterator$OfInt":"f$StreamSpliterators$InfiniteSupplyingSpliterator$OfInt","g$StreamSpliterators$InfiniteSupplyingSpliterator$OfLong":"f$StreamSpliterators$InfiniteSupplyingSpliterator$OfLong","g$StreamSpliterators$InfiniteSupplyingSpliterator$OfRef":"f$StreamSpliterators$InfiniteSupplyingSpliterator$OfRef","g$StreamSpliterators$IntWrappingSpliterator":"f$StreamSpliterators$IntWrappingSpliterator","g$StreamSpliterators$LongWrappingSpliterator":"f$StreamSpliterators$LongWrappingSpliterator","g$StreamSpliterators$SliceSpliterator":"f$StreamSpliterators$SliceSpliterator","g$StreamSpliterators$SliceSpliterator$OfDouble":"f$StreamSpliterators$SliceSpliterator$OfDouble","g$StreamSpliterators$SliceSpliterator$OfInt":"f$StreamSpliterators$SliceSpliterator$OfInt","g$StreamSpliterators$SliceSpliterator$OfLong":"f$StreamSpliterators$SliceSpliterator$OfLong","g$StreamSpliterators$SliceSpliterator$OfPrimitive":"f$StreamSpliterators$SliceSpliterator$OfPrimitive","g$StreamSpliterators$SliceSpliterator$OfRef":"f$StreamSpliterators$SliceSpliterator$OfRef","g$StreamSpliterators$UnorderedSliceSpliterator":"f$StreamSpliterators$UnorderedSliceSpliterator","g$StreamSpliterators$UnorderedSliceSpliterator$OfDouble":"f$StreamSpliterators$UnorderedSliceSpliterator$OfDouble","g$StreamSpliterators$UnorderedSliceSpliterator$OfInt":"f$StreamSpliterators$UnorderedSliceSpliterator$OfInt","g$StreamSpliterators$UnorderedSliceSpliterator$OfLong":"f$StreamSpliterators$UnorderedSliceSpliterator$OfLong","g$StreamSpliterators$UnorderedSliceSpliterator$OfPrimitive":"f$StreamSpliterators$UnorderedSliceSpliterator$OfPrimitive","g$StreamSpliterators$UnorderedSliceSpliterator$OfRef":"f$StreamSpliterators$UnorderedSliceSpliterator$OfRef","g$StreamSpliterators$UnorderedSliceSpliterator$PermitStatus":"f$StreamSpliterators$UnorderedSliceSpliterator$PermitStatus","g$StreamSpliterators$WrappingSpliterator":"f$StreamSpliterators$WrappingSpliterator","g$StreamSupport":"f$StreamSupport","g$Streams":"f$Streams","g$Streams$1":"f$Streams$1","g$Streams$2":"f$Streams$2","g$Streams$AbstractStreamBuilderImpl":"f$Streams$AbstractStreamBuilderImpl","g$Streams$ConcatSpliterator":"f$Streams$ConcatSpliterator","g$Streams$ConcatSpliterator$OfDouble":"f$Streams$ConcatSpliterator$OfDouble","g$Streams$ConcatSpliterator$OfInt":"f$Streams$ConcatSpliterator$OfInt","g$Streams$ConcatSpliterator$OfLong":"f$Streams$ConcatSpliterator$OfLong","g$Streams$ConcatSpliterator$OfPrimitive":"f$Streams$ConcatSpliterator$OfPrimitive","g$Streams$ConcatSpliterator$OfRef":"f$Streams$ConcatSpliterator$OfRef","g$Streams$DoubleStreamBuilderImpl":"f$Streams$DoubleStreamBuilderImpl","g$Streams$IntStreamBuilderImpl":"f$Streams$IntStreamBuilderImpl","g$Streams$LongStreamBuilderImpl":"f$Streams$LongStreamBuilderImpl","g$Streams$RangeIntSpliterator":"f$Streams$RangeIntSpliterator","g$Streams$RangeLongSpliterator":"f$Streams$RangeLongSpliterator","g$Streams$StreamBuilderImpl":"f$Streams$StreamBuilderImpl","h$Helpers":"i$Helpers","k$DoubleSummaryStatistics":"b$DoubleSummaryStatistics","k$DoubleSummaryStatisticsConversions":"b$DoubleSummaryStatisticsConversions","k$IntSummaryStatistics":"b$IntSummaryStatistics","k$IntSummaryStatisticsConversions":"b$IntSummaryStatisticsConversions","k$LongSummaryStatistics":"b$LongSummaryStatistics","k$LongSummaryStatisticsConversions":"b$LongSummaryStatisticsConversions","k$Optional":"b$Optional","k$OptionalConversions":"b$OptionalConversions","k$OptionalDouble":"b$OptionalDouble","k$OptionalInt":"b$OptionalInt","k$OptionalLong":"b$OptionalLong"}},{"api_level_below_or_equal":18,"static_field_retarget":{"H$ISO_8859_1 H$ISO_8859_1#INSTANCE":"y$Charset y$StandardCharsets#ISO_8859_1","H$US_ASCII H$US_ASCII#INSTANCE":"y$Charset y$StandardCharsets#US_ASCII","H$UTF_8 H$UTF_8#INSTANCE":"y$Charset y$StandardCharsets#UTF_8"}}],"package_map":{"j$.io":"t$","j$.jdk.internal.util":"F$","j$.lang":"x$","j$.nio.charset":"z$","j$.sun.misc":"D$","j$.sun.nio.cs":"I$","j$.sun.security.action":"B$","j$.sun.util":"K$","j$.time":"e$","j$.time.chrono":"r$","j$.time.format":"n$","j$.time.temporal":"l$","j$.time.zone":"p$","j$.util":"k$","j$.util.concurrent":"i$","j$.util.concurrent.atomic":"v$","j$.util.function":"w$","j$.util.stream":"g$","java.io":"s$","java.lang":"a$","java.nio.charset":"y$","java.time":"d$","java.time.chrono":"q$","java.time.format":"m$","java.time.temporal":"j$","java.time.zone":"o$","java.util":"b$","java.util.concurrent":"h$","java.util.concurrent.atomic":"u$","java.util.function":"c$","java.util.stream":"f$","jdk.internal.misc":"G$","jdk.internal.util":"E$","sun.misc":"C$","sun.nio.cs":"H$","sun.security.action":"A$","sun.util":"J$"}}
